{"ast":null,"code":"var _jsxFileName = \"/Users/nithinkatla00/My-projects/Viz-project/frontend/src/components/line-graph.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { Svg_Line_Graph } from \"../utils/svg-linegraph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LineGraph({\n  data,\n  selectedItem\n}) {\n  _s();\n  const [maxData, setMaxData] = useState([]);\n  const [minData, setMinData] = useState([]);\n  const updateMaxData = useCallback(output => {\n    const maxCountry = output.data.reduce((acc, curr) => {\n      if (!acc || curr[selectedItem] > acc[selectedItem]) {\n        return curr;\n      } else {\n        return acc;\n      }\n    }, null);\n    const maxCountryName = maxCountry ? maxCountry.country : null;\n    setMaxData(output.data.filter(el => el.country === maxCountryName));\n  }, [selectedItem]);\n  const updateMinData = useCallback(output => {\n    const minCountry = output.data.reduce((acc, curr) => {\n      if (!acc || curr[selectedItem] < acc[selectedItem]) {\n        return curr;\n      } else {\n        return acc;\n      }\n    }, null);\n    const minCountryName = minCountry ? minCountry.country : null;\n    setMinData(output.data.filter(el => el.country === minCountryName));\n  }, [selectedItem]);\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/country_details\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        country: [],\n        year: []\n      })\n    }).then(response => response.json()).then(data => {\n      const output = JSON.parse(JSON.stringify(data));\n      updateMaxData(output);\n      updateMinData(output);\n    });\n  }, [updateMaxData, updateMinData]);\n  useEffect(() => {\n    Svg_Line_Graph({\n      data,\n      selectedItem,\n      lowestData: minData,\n      highestData: maxData\n    });\n  }, [data, maxData, minData, selectedItem]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"line_graph\",\n    className: \"line-graph\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 10\n  }, this);\n}\n_s(LineGraph, \"wYZoW0luxKHcBGQgtjOcF7sjavI=\");\n_c = LineGraph;\nexport default LineGraph;\nvar _c;\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","Svg_Line_Graph","jsxDEV","_jsxDEV","LineGraph","data","selectedItem","_s","maxData","setMaxData","minData","setMinData","updateMaxData","output","maxCountry","reduce","acc","curr","maxCountryName","country","filter","el","updateMinData","minCountry","minCountryName","fetch","method","headers","body","JSON","stringify","year","then","response","json","parse","lowestData","highestData","id","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nithinkatla00/My-projects/Viz-project/frontend/src/components/line-graph.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport { Svg_Line_Graph } from \"../utils/svg-linegraph\";\n\nfunction LineGraph({ data, selectedItem }) {\n  const [maxData, setMaxData] = useState([]);\n  const [minData, setMinData] = useState([]);\n\n  const updateMaxData = useCallback(\n    (output) => {\n      const maxCountry = output.data.reduce((acc, curr) => {\n        if (!acc || curr[selectedItem] > acc[selectedItem]) {\n          return curr;\n        } else {\n          return acc;\n        }\n      }, null);\n      const maxCountryName = maxCountry ? maxCountry.country : null;\n      setMaxData(output.data.filter((el) => el.country === maxCountryName));\n    },\n    [selectedItem]\n  );\n\n  const updateMinData = useCallback(\n    (output) => {\n      const minCountry = output.data.reduce((acc, curr) => {\n        if (!acc || curr[selectedItem] < acc[selectedItem]) {\n          return curr;\n        } else {\n          return acc;\n        }\n      }, null);\n      const minCountryName = minCountry ? minCountry.country : null;\n      setMinData(output.data.filter((el) => el.country === minCountryName));\n    },\n    [selectedItem]\n  );\n\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/country_details\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        country: [],\n        year: []\n      })\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        const output = JSON.parse(JSON.stringify(data));\n        updateMaxData(output);\n        updateMinData(output);\n      });\n  }, [updateMaxData, updateMinData]);\n\n  useEffect(() => {\n    Svg_Line_Graph({\n      data,\n      selectedItem,\n      lowestData: minData,\n      highestData: maxData\n    });\n  }, [data, maxData, minData, selectedItem]);\n\n  return <div id=\"line_graph\" className=\"line-graph\"></div>;\n}\n\nexport default LineGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}