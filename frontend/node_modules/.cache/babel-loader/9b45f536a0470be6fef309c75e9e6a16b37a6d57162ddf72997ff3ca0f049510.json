{"ast":null,"code":"import * as d3 from \"d3\";\nconst thresholds = {\n  clean_water_sanitation_score: [80, 70, 60, 60],\n  freedom_to_make_life_choices: [0.6, 0.4, 0.2, 0.2],\n  gdp_per_capita: [2, 1.5, 1, 1],\n  gender_equality_score: [80, 70, 60, 60],\n  generosity: [0.3, 0.1, 0.02, 0.02],\n  good_health_score: [80, 70, 60, 60],\n  happiness_score: [7, 6, 5, 5],\n  healthy_life_expectancy: [0.5, 0.3, 0.1, 0.1],\n  no_poverty_score: [80, 60, 40, 40],\n  perceptions_of_corruption: [0.4, 0.3, 0.2, 0.2],\n  quality_education_score: [80, 60, 40, 40],\n  social_support: [2, 1.5, 1, 1],\n  sustainable_index_score: [80, 70, 60, 60],\n  zero_hunger_score: [80, 70, 60, 60]\n};\nconst categories = {\n  clean_water_sanitation_score: [\"Greater than 80\", \"70-80\", \"60-70\", \"Less than 60\"],\n  freedom_to_make_life_choices: [\"Greater than 0.6\", \"0.4-0.6\", \"0.2-0.4\", \"Less than 0.2\"],\n  gdp_per_capita: [\"Greater than 2\", \"1.5-2\", \"1-1.5\", \"Less than 1\"],\n  gender_equality_score: [\"Greater than 80\", \"70-80\", \"60-70\", \"Less than 60\"],\n  generosity: [\"Greater than 0.3\", \"0.1-0.3\", \"0.02-0.1\", \"Less than 0.02\"],\n  good_health_score: [\"Greater than 80\", \"70-80\", \"60-70\", \"Less than 60\"],\n  happiness_score: [\"Greater than 7\", \"6-7\", \"5-6\", \"Less than 5\"],\n  healthy_life_expectancy: [\"Greater than 0.5\", \"0.3-0.5\", \"0.1-0.3\", \"Less than 0.1\"],\n  no_poverty_score: [\"Greater than 80\", \"60-80\", \"40-60\", \"Less than 40\"],\n  perceptions_of_corruption: [\"Less than 0.2\", \"0.2-0.3\", \"0.3-0.4\", \"Greater than 0.4\"],\n  quality_education_score: [\"Greater than 80\", \"60-80\", \"40-60\", \"Less than 40\"],\n  social_support: [\"Greater than 2\", \"1.5-2\", \"1-1.5\", \"Less than 1\"],\n  sustainable_index_score: [\"Greater than 80\", \"70-80\", \"60-70\", \"Less than 60\"],\n  zero_hunger_score: [\"Greater than 80\", \"70-80\", \"60-70\", \"Less than 60\"]\n};\nconst getColor = index => {\n  if (index === 0) {\n    return \"green\";\n  }\n  if (index === 1) {\n    return \"yellow\";\n  }\n  if (index === 2) {\n    return \"orange\";\n  }\n  if (index === 3) {\n    return \"red\";\n  }\n  return \"lightgray\";\n};\nexport function drawBarChart({\n  data,\n  selectedItem\n}) {\n  // Get thresholds and categories for the selected item\n  const selectedThresholds = thresholds[selectedItem];\n  const selectedCategories = categories[selectedItem];\n\n  // Count the number of data points falling into each category\n  const categoryCounts = Array(selectedCategories.length).fill(0);\n  data.forEach(d => {\n    const value = d[selectedItem];\n    const categoryIndex = selectedThresholds.findIndex((val, index) => {\n      let ind;\n      if (selectedItem !== \"perceptions_of_corruption\") {\n        if (index === 0) {\n          if (value >= val) {\n            ind = index;\n          }\n        } else if (index === 3) {\n          if (val >= value) {\n            ind = index;\n          }\n        } else {\n          if (selectedThresholds[index - 1] > value && value > val) {\n            ind = index;\n          }\n        }\n      } else {\n        if (index === 0) {\n          if (value <= val) {\n            ind = index;\n          }\n        } else if (index === 3) {\n          if (val <= value) {\n            ind = index;\n          }\n        } else {\n          if (selectedThresholds[index - 1] < value && value < val) {\n            ind = index;\n          }\n        }\n      }\n      return ind !== undefined; // return true when index is defined\n    });\n    categoryCounts[categoryIndex]++;\n  });\n\n  // Prepare data for the chart\n  const chartData = selectedCategories.map((category, i) => {\n    return {\n      range: category,\n      count: categoryCounts[i]\n    };\n  });\n\n  // Define chart dimensions\n  const w = 600;\n  const h = 400;\n  const padding = 60;\n\n  // Remove previous SVG if exists\n  d3.select(\"#bar_chart\").selectAll(\"*\").remove();\n\n  // Create scales\n  const xScale = d3.scaleLinear().domain([0, d3.max(categoryCounts)]).range([padding, w - padding]);\n  const yScale = d3.scaleBand().domain(selectedCategories).range([padding, h - padding]).padding(0.1);\n\n  // Create SVG element\n  const svg = d3.select(\"#bar_chart\").attr(\"width\", w).attr(\"height\", h);\n\n  // Create bars\n  svg.selectAll(\"rect\").data(chartData).enter().append(\"rect\").attr(\"x\", padding).attr(\"y\", d => yScale(d.range)).attr(\"width\", d => xScale(d.count) - padding).attr(\"height\", yScale.bandwidth()).attr(\"fill\", function (d, i) {\n    return getColor(i);\n  }).style(\"stroke-width\", 2).style(\"stroke\", \"white\").style(\"opacity\", 0.8).on(\"mouseover\", function () {\n    d3.select(this).style(\"stroke\", \"black\").style(\"opacity\", 1);\n  }).on(\"mouseleave\", function () {\n    d3.select(this).style(\"stroke\", \"white\").style(\"opacity\", 0.8);\n  });\n\n  // Create y-axis\n  svg.append(\"g\").attr(\"transform\", \"translate(\" + padding + \",0)\").call(d3.axisLeft(yScale));\n\n  // Create x-axis\n  svg.append(\"g\").attr(\"transform\", \"translate(0,\" + (h - padding) + \")\").call(d3.axisBottom(xScale).ticks(10));\n}","map":{"version":3,"names":["d3","thresholds","clean_water_sanitation_score","freedom_to_make_life_choices","gdp_per_capita","gender_equality_score","generosity","good_health_score","happiness_score","healthy_life_expectancy","no_poverty_score","perceptions_of_corruption","quality_education_score","social_support","sustainable_index_score","zero_hunger_score","categories","getColor","index","drawBarChart","data","selectedItem","selectedThresholds","selectedCategories","categoryCounts","Array","length","fill","forEach","d","value","categoryIndex","findIndex","val","ind","undefined","chartData","map","category","i","range","count","w","h","padding","select","selectAll","remove","xScale","scaleLinear","domain","max","yScale","scaleBand","svg","attr","enter","append","bandwidth","style","on","call","axisLeft","axisBottom","ticks"],"sources":["/Users/nithinkatla00/My-projects/Viz-project/frontend/src/utils/svg-barchart.js"],"sourcesContent":["import * as d3 from \"d3\";\n\nconst thresholds = {\n  clean_water_sanitation_score: [80, 70, 60, 60],\n  freedom_to_make_life_choices: [0.6, 0.4, 0.2, 0.2],\n  gdp_per_capita: [2, 1.5, 1, 1],\n  gender_equality_score: [80, 70, 60, 60],\n  generosity: [0.3, 0.1, 0.02, 0.02],\n  good_health_score: [80, 70, 60, 60],\n  happiness_score: [7, 6, 5, 5],\n  healthy_life_expectancy: [0.5, 0.3, 0.1, 0.1],\n  no_poverty_score: [80, 60, 40, 40],\n  perceptions_of_corruption: [0.4, 0.3, 0.2, 0.2],\n  quality_education_score: [80, 60, 40, 40],\n  social_support: [2, 1.5, 1, 1],\n  sustainable_index_score: [80, 70, 60, 60],\n  zero_hunger_score: [80, 70, 60, 60]\n};\nconst categories = {\n  clean_water_sanitation_score: [\n    \"Greater than 80\",\n    \"70-80\",\n    \"60-70\",\n    \"Less than 60\"\n  ],\n  freedom_to_make_life_choices: [\n    \"Greater than 0.6\",\n    \"0.4-0.6\",\n    \"0.2-0.4\",\n    \"Less than 0.2\"\n  ],\n  gdp_per_capita: [\"Greater than 2\", \"1.5-2\", \"1-1.5\", \"Less than 1\"],\n  gender_equality_score: [\"Greater than 80\", \"70-80\", \"60-70\", \"Less than 60\"],\n  generosity: [\"Greater than 0.3\", \"0.1-0.3\", \"0.02-0.1\", \"Less than 0.02\"],\n  good_health_score: [\"Greater than 80\", \"70-80\", \"60-70\", \"Less than 60\"],\n  happiness_score: [\"Greater than 7\", \"6-7\", \"5-6\", \"Less than 5\"],\n  healthy_life_expectancy: [\n    \"Greater than 0.5\",\n    \"0.3-0.5\",\n    \"0.1-0.3\",\n    \"Less than 0.1\"\n  ],\n  no_poverty_score: [\"Greater than 80\", \"60-80\", \"40-60\", \"Less than 40\"],\n  perceptions_of_corruption: [\n    \"Less than 0.2\",\n    \"0.2-0.3\",\n    \"0.3-0.4\",\n    \"Greater than 0.4\"\n  ],\n  quality_education_score: [\n    \"Greater than 80\",\n    \"60-80\",\n    \"40-60\",\n    \"Less than 40\"\n  ],\n  social_support: [\"Greater than 2\", \"1.5-2\", \"1-1.5\", \"Less than 1\"],\n  sustainable_index_score: [\n    \"Greater than 80\",\n    \"70-80\",\n    \"60-70\",\n    \"Less than 60\"\n  ],\n  zero_hunger_score: [\"Greater than 80\", \"70-80\", \"60-70\", \"Less than 60\"]\n};\n\nconst getColor = (index) => {\n  if (index === 0) {\n    return \"green\";\n  }\n  if (index === 1) {\n    return \"yellow\";\n  }\n  if (index === 2) {\n    return \"orange\";\n  }\n  if (index === 3) {\n    return \"red\";\n  }\n  return \"lightgray\";\n};\n\nexport function drawBarChart({ data, selectedItem }) {\n  // Get thresholds and categories for the selected item\n  const selectedThresholds = thresholds[selectedItem];\n  const selectedCategories = categories[selectedItem];\n\n  // Count the number of data points falling into each category\n  const categoryCounts = Array(selectedCategories.length).fill(0);\n  data.forEach((d) => {\n    const value = d[selectedItem];\n    const categoryIndex = selectedThresholds.findIndex((val, index) => {\n      let ind;\n      if (selectedItem !== \"perceptions_of_corruption\") {\n        if (index === 0) {\n          if (value >= val) {\n            ind = index;\n          }\n        } else if (index === 3) {\n          if (val >= value) {\n            ind = index;\n          }\n        } else {\n          if (selectedThresholds[index - 1] > value && value > val) {\n            ind = index;\n          }\n        }\n      } else {\n        if (index === 0) {\n          if (value <= val) {\n            ind = index;\n          }\n        } else if (index === 3) {\n          if (val <= value) {\n            ind = index;\n          }\n        } else {\n          if (selectedThresholds[index - 1] < value && value < val) {\n            ind = index;\n          }\n        }\n      }\n      return ind !== undefined; // return true when index is defined\n    });\n\n    categoryCounts[categoryIndex]++;\n  });\n\n  // Prepare data for the chart\n  const chartData = selectedCategories.map((category, i) => {\n    return {\n      range: category,\n      count: categoryCounts[i]\n    };\n  });\n\n  // Define chart dimensions\n  const w = 600;\n  const h = 400;\n  const padding = 60;\n\n  // Remove previous SVG if exists\n  d3.select(\"#bar_chart\").selectAll(\"*\").remove();\n\n  // Create scales\n  const xScale = d3\n    .scaleLinear()\n    .domain([0, d3.max(categoryCounts)])\n    .range([padding, w - padding]);\n\n  const yScale = d3\n    .scaleBand()\n    .domain(selectedCategories)\n    .range([padding, h - padding])\n    .padding(0.1);\n\n  // Create SVG element\n  const svg = d3.select(\"#bar_chart\").attr(\"width\", w).attr(\"height\", h);\n\n  // Create bars\n  svg\n    .selectAll(\"rect\")\n    .data(chartData)\n    .enter()\n    .append(\"rect\")\n    .attr(\"x\", padding)\n    .attr(\"y\", (d) => yScale(d.range))\n    .attr(\"width\", (d) => xScale(d.count) - padding)\n    .attr(\"height\", yScale.bandwidth())\n    .attr(\"fill\", function (d, i) {\n      return getColor(i);\n    })\n    .style(\"stroke-width\", 2)\n    .style(\"stroke\", \"white\")\n    .style(\"opacity\", 0.8)\n    .on(\"mouseover\", function () {\n      d3.select(this).style(\"stroke\", \"black\").style(\"opacity\", 1);\n    })\n    .on(\"mouseleave\", function () {\n      d3.select(this).style(\"stroke\", \"white\").style(\"opacity\", 0.8);\n    });\n\n  // Create y-axis\n  svg\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + padding + \",0)\")\n    .call(d3.axisLeft(yScale));\n\n  // Create x-axis\n  svg\n    .append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + (h - padding) + \")\")\n    .call(d3.axisBottom(xScale).ticks(10));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}