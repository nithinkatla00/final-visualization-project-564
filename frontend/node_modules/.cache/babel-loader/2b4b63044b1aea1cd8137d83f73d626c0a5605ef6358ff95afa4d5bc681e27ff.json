{"ast":null,"code":"import * as d3 from \"d3\";\nexport function drawBarChart({\n  data,\n  selectedItem\n}) {\n  // Define the threshold values and categories\n  const thresholds = [100, 200, 300, 400];\n  const categories = [\"Less than 100\", \"Between 100 and 200\", \"Between 200 and 300\", \"Between 300 and 400\", \"Greater than 400\"];\n\n  // Count the number of data points falling into each category\n  const categoryCounts = Array(categories.length).fill(0);\n  data.forEach(d => {\n    const value = d[selectedItem];\n    const categoryIndex = d3.bisect(thresholds, value);\n    categoryCounts[categoryIndex]++;\n  });\n\n  // Prepare data for the chart\n  const chartData = categories.map((category, i) => {\n    return {\n      range: category,\n      count: categoryCounts[i]\n    };\n  });\n  console.log(chartData);\n\n  // Define chart dimensions\n  const w = 650;\n  const h = 400;\n  const barSpacing = 40;\n  const barWidth = 40;\n  const padding = 60;\n\n  // Create scales\n  const xScale = d3.scaleBand().domain(categories).range([padding, w - padding]).padding(0.1);\n  const yScale = d3.scaleLinear().domain([0, d3.max(categoryCounts)]).range([h - padding, padding]);\n\n  // Create SVG element\n  const svg = d3.select(\"#bar_chart\").attr(\"width\", w).attr(\"height\", h);\n\n  // Create bars\n  svg.selectAll(\"rect\").data(chartData).enter().append(\"rect\").attr(\"x\", d => xScale(d.range)).attr(\"y\", d => yScale(d.count)).attr(\"width\", xScale.bandwidth()).attr(\"height\", d => h - yScale(d.count) - padding).attr(\"fill\", \"steelblue\");\n\n  // Create x-axis\n  svg.append(\"g\").attr(\"transform\", \"translate(0,\" + (h - padding) + \")\").call(d3.axisBottom(xScale));\n\n  // Create y-axis\n  svg.append(\"g\").attr(\"transform\", \"translate(\" + padding + \",0)\").call(d3.axisLeft(yScale));\n}","map":{"version":3,"names":["d3","drawBarChart","data","selectedItem","thresholds","categories","categoryCounts","Array","length","fill","forEach","d","value","categoryIndex","bisect","chartData","map","category","i","range","count","console","log","w","h","barSpacing","barWidth","padding","xScale","scaleBand","domain","yScale","scaleLinear","max","svg","select","attr","selectAll","enter","append","bandwidth","call","axisBottom","axisLeft"],"sources":["/Users/nithinkatla00/My-projects/Viz-project/frontend/src/utils/svg-barchart.js"],"sourcesContent":["import * as d3 from \"d3\";\n\nexport function drawBarChart({ data, selectedItem }) {\n  // Define the threshold values and categories\n  const thresholds = [100, 200, 300, 400];\n  const categories = [\n    \"Less than 100\",\n    \"Between 100 and 200\",\n    \"Between 200 and 300\",\n    \"Between 300 and 400\",\n    \"Greater than 400\"\n  ];\n\n  // Count the number of data points falling into each category\n  const categoryCounts = Array(categories.length).fill(0);\n  data.forEach((d) => {\n    const value = d[selectedItem];\n    const categoryIndex = d3.bisect(thresholds, value);\n    categoryCounts[categoryIndex]++;\n  });\n\n  // Prepare data for the chart\n  const chartData = categories.map((category, i) => {\n    return {\n      range: category,\n      count: categoryCounts[i]\n    };\n  });\n  console.log(chartData);\n\n  // Define chart dimensions\n  const w = 650;\n  const h = 400;\n  const barSpacing = 40;\n  const barWidth = 40;\n  const padding = 60;\n\n  // Create scales\n  const xScale = d3\n    .scaleBand()\n    .domain(categories)\n    .range([padding, w - padding])\n    .padding(0.1);\n\n  const yScale = d3\n    .scaleLinear()\n    .domain([0, d3.max(categoryCounts)])\n    .range([h - padding, padding]);\n\n  // Create SVG element\n  const svg = d3.select(\"#bar_chart\").attr(\"width\", w).attr(\"height\", h);\n\n  // Create bars\n  svg\n    .selectAll(\"rect\")\n    .data(chartData)\n    .enter()\n    .append(\"rect\")\n    .attr(\"x\", (d) => xScale(d.range))\n    .attr(\"y\", (d) => yScale(d.count))\n    .attr(\"width\", xScale.bandwidth())\n    .attr(\"height\", (d) => h - yScale(d.count) - padding)\n    .attr(\"fill\", \"steelblue\");\n\n  // Create x-axis\n  svg\n    .append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + (h - padding) + \")\")\n    .call(d3.axisBottom(xScale));\n\n  // Create y-axis\n  svg\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + padding + \",0)\")\n    .call(d3.axisLeft(yScale));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}