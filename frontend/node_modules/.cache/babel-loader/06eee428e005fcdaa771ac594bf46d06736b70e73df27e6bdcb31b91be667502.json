{"ast":null,"code":"var _jsxFileName = \"/Users/nithinkatla00/My-projects/Viz-project/frontend/src/components/pcp-plot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { PcpChart } from \"../utils/svg-pcpplot\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PCPPlot = ({\n  selectedCountry,\n  selectedYear\n}) => {\n  _s();\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/PcpData\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        country: selectedCountry\n      })\n    }).then(response => response.json()).then(pcaData => {\n      const output = JSON.parse(JSON.stringify(pcaData));\n      PcpChart({\n        dataPcp: output.data,\n        dimensions: []\n      });\n    });\n  }, [selectedCountry]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"PCP Plot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), selectedCountry && /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"svg_3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(PCPPlot, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = PCPPlot;\nexport default PCPPlot;\nvar _c;\n$RefreshReg$(_c, \"PCPPlot\");","map":{"version":3,"names":["React","useEffect","PcpChart","jsxDEV","_jsxDEV","PCPPlot","selectedCountry","selectedYear","_s","fetch","method","headers","body","JSON","stringify","country","then","response","json","pcaData","output","parse","dataPcp","data","dimensions","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/nithinkatla00/My-projects/Viz-project/frontend/src/components/pcp-plot.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { PcpChart } from \"../utils/svg-pcpplot\";\n\nconst PCPPlot = ({ selectedCountry, selectedYear }) => {\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/PcpData\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        country: selectedCountry\n      })\n    })\n      .then((response) => response.json())\n      .then((pcaData) => {\n        const output = JSON.parse(JSON.stringify(pcaData));\n        PcpChart({ dataPcp: output.data, dimensions: [] });\n      });\n  }, [selectedCountry]);\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h3>PCP Plot</h3>\n      {selectedCountry && <svg id=\"svg_3\"></svg>}\n    </div>\n  );\n};\n\nexport default PCPPlot;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,OAAO,GAAGA,CAAC;EAAEC,eAAe;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACrDP,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,+BAA+B,EAAE;MACrCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,OAAO,EAAET;MACX,CAAC;IACH,CAAC,CAAC,CACCU,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,OAAO,IAAK;MACjB,MAAMC,MAAM,GAAGP,IAAI,CAACQ,KAAK,CAACR,IAAI,CAACC,SAAS,CAACK,OAAO,CAAC,CAAC;MAClDjB,QAAQ,CAAC;QAAEoB,OAAO,EAAEF,MAAM,CAACG,IAAI;QAAEC,UAAU,EAAE;MAAG,CAAC,CAAC;IACpD,CAAC,CAAC;EACN,CAAC,EAAE,CAAClB,eAAe,CAAC,CAAC;EAErB,oBACEF,OAAA;IAAKqB,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAClCvB,OAAA;MAAAuB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBzB,eAAe,iBAAIF,OAAA;MAAK4B,EAAE,EAAC;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAACvB,EAAA,CAxBIH,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AA0Bb,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}