{"ast":null,"code":"import * as d3 from \"d3\";\nexport function PcpChart({\n  dataPcp,\n  dimensions\n}) {\n  d3.select(\"#svg_3\").html(\"\");\n  var color = d3.scaleOrdinal(d3.schemeCategory10);\n  var margin = {\n      top: 90,\n      right: 80,\n      bottom: 35,\n      left: 80\n    },\n    width = 1200 - margin.left - margin.right,\n    height = 600 - margin.top - margin.bottom;\n  var x = d3.scalePoint().range([0, width], 1),\n    y = {},\n    dragging = {};\n  var line = d3.line(),\n    axis = d3.axisLeft(),\n    background,\n    foreground;\n  var svg = d3.select(\"#svg_3\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  x.domain(dimensions = d3.keys(dataPcp[0]).filter(function (d) {\n    if (d === \"clusters\") return false;\n    if (d === \"year\") {\n      y[d] = d3.scaleBand().domain(dataPcp.map(function (p) {\n        return p[d];\n      })).rangeRound([height, 0]).padding(1);\n    } else {\n      y[d] = d3.scaleLinear().domain(d3.extent(dataPcp, function (p) {\n        return +p[d];\n      })).range([height, 0]);\n    }\n    return true;\n  }));\n\n  // Add grey background lines for context.\n  // background = svg\n  //   .append(\"g\")\n  //   .attr(\"class\", \"background\")\n  //   .selectAll(\"path\")\n  //   .data(dataPcp)\n  //   .enter()\n  //   .append(\"path\")\n  //   .attr(\"d\", path);\n\n  // // Add blue foreground lines for focus.\n  // foreground = svg\n  //   .append(\"g\")\n  //   .attr(\"class\", \"foreground\")\n  //   .selectAll(\"path\")\n  //   .data(dataPcp)\n  //   .enter()\n  //   .append(\"path\")\n  //   .attr(\"d\", path)\n  //   .attr(\"style\", function (d) {\n  //     return \"stroke:\" + color(d.clusters) + \";\";\n  //   });\n\n  // // Add a group element for each dimension.\n  // var g = svg\n  //   .selectAll(\".dimension\")\n  //   .data(dimensions)\n  //   .enter()\n  //   .append(\"g\")\n  //   .attr(\"class\", \"dimension\")\n  //   .attr(\"transform\", function (d) {\n  //     return \"translate(\" + x(d) + \")\";\n  //   })\n  //   .call(\n  //     d3\n  //       .drag()\n  //       .subject(function (d) {\n  //         return { x: x(d) };\n  //       })\n  //       .on(\"start\", function (d) {\n  //         dragging[d] = x(d);\n  //         background.attr(\"visibility\", \"hidden\");\n  //       })\n  //       .on(\"drag\", function (d) {\n  //         dragging[d] = Math.min(width, Math.max(0, d3.event.x));\n  //         foreground.attr(\"d\", path);\n  //         dimensions.sort(function (a, b) {\n  //           return position(a) - position(b);\n  //         });\n  //         x.domain(dimensions);\n  //         g.attr(\"transform\", function (d) {\n  //           return \"translate(\" + position(d) + \")\";\n  //         });\n  //       })\n  //       .on(\"end\", function (d) {\n  //         delete dragging[d];\n  //         transition(d3.select(this)).attr(\n  //           \"transform\",\n  //           \"translate(\" + x(d) + \")\"\n  //         );\n  //         transition(foreground).attr(\"d\", path);\n  //         background\n  //           .attr(\"d\", path)\n  //           .transition()\n  //           .delay(500)\n  //           .duration(0)\n  //           .attr(\"visibility\", null);\n  //       })\n  //   );\n\n  // Add an axis and title.\n  g.append(\"g\").attr(\"class\", \"axis\").each(function (d) {\n    d3.select(this).call(axis.scale(y[d]));\n  });\n  g.append(\"text\").style(\"text-anchor\", \"middle\").attr(\"x\", 15).attr(\"y\", -15).attr(\"transform\", \"rotate(-25)\").text(function (d) {\n    return d;\n  });\n\n  // Add and store a brush for each axis.\n\n  // const yBrushes = {};\n  // g.append(\"g\")\n  //   .attr(\"class\", \"brush\")\n  //   .each(function (d) {\n  //     d3.select(this).call(\n  //       (y[d].brush = d3\n  //         .brushY()\n  //         .extent([\n  //           [-10, 0],\n  //           [10, height]\n  //         ])\n  //         .on(\"start\", brushstart)\n  //         .on(\"brush\", brush))\n  //     );\n  //   });\n\n  // function brush() {\n  //   var actives = [];\n  //   //filter brushed extents\n  //   svg\n  //     .selectAll(\".brush\")\n  //     .filter(function (d) {\n  //       return d3.brushSelection(this);\n  //     })\n  //     .each(function (d) {\n  //       actives.push({\n  //         dimension: d,\n  //         extent: d3.brushSelection(this)\n  //       });\n  //     });\n  //   //set un-brushed foreground line disappear\n  //   foreground.classed(\"fade\", function (d, i) {\n  //     return !actives.every(function (active) {\n  //       var dim = active.dimension;\n  //       return (\n  //         active.extent[0] <= y[dim](d[dim]) &&\n  //         y[dim](d[dim]) <= active.extent[1]\n  //       );\n  //     });\n  //   });\n  // }\n\n  function position(d) {\n    var v = dragging[d];\n    return v == null ? x(d) : v;\n  }\n  function transition(g) {\n    return g.transition().duration(500);\n  }\n\n  // Returns the path for a given data point.\n  function path(d) {\n    return line(dimensions.map(function (p) {\n      return [position(p), y[p](d[p])];\n    }));\n  }\n  function brushstart() {\n    if (d3.event.sourceEvent) {\n      d3.event.sourceEvent.stopPropagation();\n    }\n  }\n}\n_c = PcpChart;\nvar _c;\n$RefreshReg$(_c, \"PcpChart\");","map":{"version":3,"names":["d3","PcpChart","dataPcp","dimensions","select","html","color","scaleOrdinal","schemeCategory10","margin","top","right","bottom","left","width","height","x","scalePoint","range","y","dragging","line","axis","axisLeft","background","foreground","svg","attr","append","domain","keys","filter","d","scaleBand","map","p","rangeRound","padding","scaleLinear","extent","g","each","call","scale","style","text","position","v","transition","duration","path","brushstart","event","sourceEvent","stopPropagation","_c","$RefreshReg$"],"sources":["/Users/nithinkatla00/My-projects/Viz-project/frontend/src/utils/svg-pcpplot.js"],"sourcesContent":["import * as d3 from \"d3\";\n\nexport function PcpChart({ dataPcp, dimensions }) {\n  d3.select(\"#svg_3\").html(\"\");\n  var color = d3.scaleOrdinal(d3.schemeCategory10);\n  var margin = { top: 90, right: 80, bottom: 35, left: 80 },\n    width = 1200 - margin.left - margin.right,\n    height = 600 - margin.top - margin.bottom;\n\n  var x = d3.scalePoint().range([0, width], 1),\n    y = {},\n    dragging = {};\n\n  var line = d3.line(),\n    axis = d3.axisLeft(),\n    background,\n    foreground;\n\n  var svg = d3\n    .select(\"#svg_3\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  x.domain(\n    (dimensions = d3.keys(dataPcp[0]).filter(function (d) {\n      if (d === \"clusters\") return false;\n      if (d === \"year\") {\n        y[d] = d3\n          .scaleBand()\n          .domain(\n            dataPcp.map(function (p) {\n              return p[d];\n            })\n          )\n          .rangeRound([height, 0])\n          .padding(1);\n      } else {\n        y[d] = d3\n          .scaleLinear()\n          .domain(\n            d3.extent(dataPcp, function (p) {\n              return +p[d];\n            })\n          )\n          .range([height, 0]);\n      }\n      return true;\n    }))\n  );\n\n  // Add grey background lines for context.\n  // background = svg\n  //   .append(\"g\")\n  //   .attr(\"class\", \"background\")\n  //   .selectAll(\"path\")\n  //   .data(dataPcp)\n  //   .enter()\n  //   .append(\"path\")\n  //   .attr(\"d\", path);\n\n  // // Add blue foreground lines for focus.\n  // foreground = svg\n  //   .append(\"g\")\n  //   .attr(\"class\", \"foreground\")\n  //   .selectAll(\"path\")\n  //   .data(dataPcp)\n  //   .enter()\n  //   .append(\"path\")\n  //   .attr(\"d\", path)\n  //   .attr(\"style\", function (d) {\n  //     return \"stroke:\" + color(d.clusters) + \";\";\n  //   });\n\n  // // Add a group element for each dimension.\n  // var g = svg\n  //   .selectAll(\".dimension\")\n  //   .data(dimensions)\n  //   .enter()\n  //   .append(\"g\")\n  //   .attr(\"class\", \"dimension\")\n  //   .attr(\"transform\", function (d) {\n  //     return \"translate(\" + x(d) + \")\";\n  //   })\n  //   .call(\n  //     d3\n  //       .drag()\n  //       .subject(function (d) {\n  //         return { x: x(d) };\n  //       })\n  //       .on(\"start\", function (d) {\n  //         dragging[d] = x(d);\n  //         background.attr(\"visibility\", \"hidden\");\n  //       })\n  //       .on(\"drag\", function (d) {\n  //         dragging[d] = Math.min(width, Math.max(0, d3.event.x));\n  //         foreground.attr(\"d\", path);\n  //         dimensions.sort(function (a, b) {\n  //           return position(a) - position(b);\n  //         });\n  //         x.domain(dimensions);\n  //         g.attr(\"transform\", function (d) {\n  //           return \"translate(\" + position(d) + \")\";\n  //         });\n  //       })\n  //       .on(\"end\", function (d) {\n  //         delete dragging[d];\n  //         transition(d3.select(this)).attr(\n  //           \"transform\",\n  //           \"translate(\" + x(d) + \")\"\n  //         );\n  //         transition(foreground).attr(\"d\", path);\n  //         background\n  //           .attr(\"d\", path)\n  //           .transition()\n  //           .delay(500)\n  //           .duration(0)\n  //           .attr(\"visibility\", null);\n  //       })\n  //   );\n\n  // Add an axis and title.\n  g.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .each(function (d) {\n      d3.select(this).call(axis.scale(y[d]));\n    });\n  g.append(\"text\")\n    .style(\"text-anchor\", \"middle\")\n    .attr(\"x\", 15)\n    .attr(\"y\", -15)\n    .attr(\"transform\", \"rotate(-25)\")\n    .text(function (d) {\n      return d;\n    });\n\n  // Add and store a brush for each axis.\n\n  // const yBrushes = {};\n  // g.append(\"g\")\n  //   .attr(\"class\", \"brush\")\n  //   .each(function (d) {\n  //     d3.select(this).call(\n  //       (y[d].brush = d3\n  //         .brushY()\n  //         .extent([\n  //           [-10, 0],\n  //           [10, height]\n  //         ])\n  //         .on(\"start\", brushstart)\n  //         .on(\"brush\", brush))\n  //     );\n  //   });\n\n  // function brush() {\n  //   var actives = [];\n  //   //filter brushed extents\n  //   svg\n  //     .selectAll(\".brush\")\n  //     .filter(function (d) {\n  //       return d3.brushSelection(this);\n  //     })\n  //     .each(function (d) {\n  //       actives.push({\n  //         dimension: d,\n  //         extent: d3.brushSelection(this)\n  //       });\n  //     });\n  //   //set un-brushed foreground line disappear\n  //   foreground.classed(\"fade\", function (d, i) {\n  //     return !actives.every(function (active) {\n  //       var dim = active.dimension;\n  //       return (\n  //         active.extent[0] <= y[dim](d[dim]) &&\n  //         y[dim](d[dim]) <= active.extent[1]\n  //       );\n  //     });\n  //   });\n  // }\n\n  function position(d) {\n    var v = dragging[d];\n    return v == null ? x(d) : v;\n  }\n\n  function transition(g) {\n    return g.transition().duration(500);\n  }\n\n  // Returns the path for a given data point.\n  function path(d) {\n    return line(\n      dimensions.map(function (p) {\n        return [position(p), y[p](d[p])];\n      })\n    );\n  }\n\n  function brushstart() {\n    if (d3.event.sourceEvent) {\n      d3.event.sourceEvent.stopPropagation();\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}