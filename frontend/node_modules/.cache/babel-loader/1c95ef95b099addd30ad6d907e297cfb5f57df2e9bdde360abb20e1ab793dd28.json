{"ast":null,"code":"import * as d3 from \"d3\";\nconst thresholds = {\n  clean_water_sanitation_score: [80, 60, 40, 20],\n  freedom_to_make_life_choices: [80, 60, 40, 20],\n  gdp_per_capita: [80, 60, 40, 20],\n  gender_equality_score: [80, 60, 40, 20],\n  generosity: [80, 60, 40, 20],\n  good_health_score: [80, 60, 40, 20],\n  happiness_score: [6, 4, 3, 1],\n  healthy_life_expectancy: [6, 4, 3, 1],\n  no_poverty_score: [6, 4, 3, 1],\n  perceptions_of_corruption: [6, 4, 3, 1],\n  quality_education_score: [6, 4, 3, 1],\n  social_support: [6, 4, 3, 1],\n  sustainable_index_score: [6, 4, 3, 1],\n  zero_hunger_score: [6, 4, 3, 1]\n};\nconst categories = {\n  clean_water_sanitation_score: [\"Greater than 80\", \"60-80\", \"40-60\", \"20-40\"],\n  freedom_to_make_life_choices: [\"Greater than 80\", \"60-80\", \"40-60\", \"20-40\"],\n  gdp_per_capita: [\"Greater than 80\", \"60-80\", \"40-60\", \"20-40\"],\n  gender_equality_score: [\"Greater than 80\", \"60-80\", \"40-60\", \"20-40\"],\n  generosity: [\"Greater than 80\", \"60-80\", \"40-60\", \"20-40\"],\n  good_health_score: [\"Greater than 80\", \"60-80\", \"40-60\", \"20-40\"],\n  happiness_score: [\"Greater than 6\", \"4-6\", \"3-4\", \"Less than 3\"],\n  healthy_life_expectancy: [\"Greater than 6\", \"4-6\", \"3-4\", \"Less than 3\"],\n  no_poverty_score: [\"Greater than 6\", \"4-6\", \"3-4\", \"Less than 3\"],\n  perceptions_of_corruption: [\"Greater than 6\", \"4-6\", \"3-4\", \"Less than 3\"],\n  quality_education_score: [\"Greater than 6\", \"4-6\", \"3-4\", \"Less than 3\"],\n  social_support: [\"Greater than 6\", \"4-6\", \"3-4\", \"Less than 3\"],\n  sustainable_index_score: [\"Greater than 6\", \"4-6\", \"3-4\", \"Less than 3\"],\n  zero_hunger_score: [\"Greater than 6\", \"4-6\", \"3-4\", \"Less than 3\"]\n};\nexport function drawBarChart({\n  data,\n  selectedItem\n}) {\n  // Get thresholds and categories for the selected item\n  const selectedThresholds = thresholds[selectedItem];\n  const selectedCategories = categories[selectedItem];\n\n  // Count the number of data points falling into each category\n  const categoryCounts = Array(selectedCategories.length).fill(0);\n  data.forEach(d => {\n    const value = d[selectedItem];\n    const categoryIndex = selectedThresholds.findIndex(threshold => value > threshold);\n    categoryCounts[categoryIndex]++;\n  });\n\n  // Prepare data for the chart\n  const chartData = selectedCategories.map((category, i) => {\n    return {\n      range: category,\n      count: categoryCounts[i]\n    };\n  });\n\n  // Define chart dimensions\n  const w = 650;\n  const h = 400;\n  const padding = 60;\n\n  // Create scales\n  const xScale = d3.scaleLinear().domain([0, d3.max(categoryCounts)]).range([padding, w - padding]);\n  const yScale = d3.scaleBand().domain(selectedCategories).range([padding, h - padding]).padding(0.1);\n\n  // Create SVG element\n  const svg = d3.select(\"#bar_chart\").attr(\"width\", w).attr(\"height\", h);\n\n  // Create bars\n  svg.selectAll(\"rect\").data(chartData).enter().append(\"rect\").attr(\"x\", padding).attr(\"y\", d => yScale(d.range)).attr(\"width\", d => xScale(d.count) - padding).attr(\"height\", yScale.bandwidth()).attr(\"fill\", (d, i) => {\n    // Set bar colors based on categories\n    if (i === 0) return \"green\"; // First category\n    else if (i === selectedCategories.length - 1) return \"red\"; // Last category\n    else return \"steelblue\"; // Other categories\n  }).on(\"mouseover\", function () {\n    d3.select(this).attr(\"fill\", \"purple\"); // Change color on hover\n  }).on(\"mouseout\", function (d, i) {\n    // Restore original colors on mouseout\n    if (i === 0) return \"green\";else if (i === selectedCategories.length - 1) return \"red\";else return \"steelblue\";\n  });\n\n  // Create y-axis\n  svg.append(\"g\").attr(\"transform\", \"translate(\" + padding + \",0)\").call(d3.axisLeft(yScale));\n\n  // Create x-axis\n  svg.append(\"g\").attr(\"transform\", \"translate(0,\" + (h - padding) + \")\").call(d3.axisBottom(xScale).ticks(10));\n}","map":{"version":3,"names":["d3","thresholds","clean_water_sanitation_score","freedom_to_make_life_choices","gdp_per_capita","gender_equality_score","generosity","good_health_score","happiness_score","healthy_life_expectancy","no_poverty_score","perceptions_of_corruption","quality_education_score","social_support","sustainable_index_score","zero_hunger_score","categories","drawBarChart","data","selectedItem","selectedThresholds","selectedCategories","categoryCounts","Array","length","fill","forEach","d","value","categoryIndex","findIndex","threshold","chartData","map","category","i","range","count","w","h","padding","xScale","scaleLinear","domain","max","yScale","scaleBand","svg","select","attr","selectAll","enter","append","bandwidth","on","call","axisLeft","axisBottom","ticks"],"sources":["/Users/nithinkatla00/My-projects/Viz-project/frontend/src/utils/svg-barchart.js"],"sourcesContent":["import * as d3 from \"d3\";\n\nconst thresholds = {\n  clean_water_sanitation_score: [80, 60, 40, 20],\n  freedom_to_make_life_choices: [80, 60, 40, 20],\n  gdp_per_capita: [80, 60, 40, 20],\n  gender_equality_score: [80, 60, 40, 20],\n  generosity: [80, 60, 40, 20],\n  good_health_score: [80, 60, 40, 20],\n  happiness_score: [6, 4, 3, 1],\n  healthy_life_expectancy: [6, 4, 3, 1],\n  no_poverty_score: [6, 4, 3, 1],\n  perceptions_of_corruption: [6, 4, 3, 1],\n  quality_education_score: [6, 4, 3, 1],\n  social_support: [6, 4, 3, 1],\n  sustainable_index_score: [6, 4, 3, 1],\n  zero_hunger_score: [6, 4, 3, 1]\n};\nconst categories = {\n  clean_water_sanitation_score: [\"Greater than 80\", \"60-80\", \"40-60\", \"20-40\"],\n  freedom_to_make_life_choices: [\"Greater than 80\", \"60-80\", \"40-60\", \"20-40\"],\n  gdp_per_capita: [\"Greater than 80\", \"60-80\", \"40-60\", \"20-40\"],\n  gender_equality_score: [\"Greater than 80\", \"60-80\", \"40-60\", \"20-40\"],\n  generosity: [\"Greater than 80\", \"60-80\", \"40-60\", \"20-40\"],\n  good_health_score: [\"Greater than 80\", \"60-80\", \"40-60\", \"20-40\"],\n  happiness_score: [\"Greater than 6\", \"4-6\", \"3-4\", \"Less than 3\"],\n  healthy_life_expectancy: [\"Greater than 6\", \"4-6\", \"3-4\", \"Less than 3\"],\n  no_poverty_score: [\"Greater than 6\", \"4-6\", \"3-4\", \"Less than 3\"],\n  perceptions_of_corruption: [\"Greater than 6\", \"4-6\", \"3-4\", \"Less than 3\"],\n  quality_education_score: [\"Greater than 6\", \"4-6\", \"3-4\", \"Less than 3\"],\n  social_support: [\"Greater than 6\", \"4-6\", \"3-4\", \"Less than 3\"],\n  sustainable_index_score: [\"Greater than 6\", \"4-6\", \"3-4\", \"Less than 3\"],\n  zero_hunger_score: [\"Greater than 6\", \"4-6\", \"3-4\", \"Less than 3\"]\n};\n\nexport function drawBarChart({ data, selectedItem }) {\n  // Get thresholds and categories for the selected item\n  const selectedThresholds = thresholds[selectedItem];\n  const selectedCategories = categories[selectedItem];\n\n  // Count the number of data points falling into each category\n  const categoryCounts = Array(selectedCategories.length).fill(0);\n  data.forEach((d) => {\n    const value = d[selectedItem];\n    const categoryIndex = selectedThresholds.findIndex(\n      (threshold) => value > threshold\n    );\n    categoryCounts[categoryIndex]++;\n  });\n\n  // Prepare data for the chart\n  const chartData = selectedCategories.map((category, i) => {\n    return {\n      range: category,\n      count: categoryCounts[i]\n    };\n  });\n\n  // Define chart dimensions\n  const w = 650;\n  const h = 400;\n  const padding = 60;\n\n  // Create scales\n  const xScale = d3\n    .scaleLinear()\n    .domain([0, d3.max(categoryCounts)])\n    .range([padding, w - padding]);\n\n  const yScale = d3\n    .scaleBand()\n    .domain(selectedCategories)\n    .range([padding, h - padding])\n    .padding(0.1);\n\n  // Create SVG element\n  const svg = d3.select(\"#bar_chart\").attr(\"width\", w).attr(\"height\", h);\n\n  // Create bars\n  svg\n    .selectAll(\"rect\")\n    .data(chartData)\n    .enter()\n    .append(\"rect\")\n    .attr(\"x\", padding)\n    .attr(\"y\", (d) => yScale(d.range))\n    .attr(\"width\", (d) => xScale(d.count) - padding)\n    .attr(\"height\", yScale.bandwidth())\n    .attr(\"fill\", (d, i) => {\n      // Set bar colors based on categories\n      if (i === 0) return \"green\"; // First category\n      else if (i === selectedCategories.length - 1)\n        return \"red\"; // Last category\n      else return \"steelblue\"; // Other categories\n    })\n    .on(\"mouseover\", function () {\n      d3.select(this).attr(\"fill\", \"purple\"); // Change color on hover\n    })\n    .on(\"mouseout\", function (d, i) {\n      // Restore original colors on mouseout\n      if (i === 0) return \"green\";\n      else if (i === selectedCategories.length - 1) return \"red\";\n      else return \"steelblue\";\n    });\n\n  // Create y-axis\n  svg\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + padding + \",0)\")\n    .call(d3.axisLeft(yScale));\n\n  // Create x-axis\n  svg\n    .append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + (h - padding) + \")\")\n    .call(d3.axisBottom(xScale).ticks(10));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}