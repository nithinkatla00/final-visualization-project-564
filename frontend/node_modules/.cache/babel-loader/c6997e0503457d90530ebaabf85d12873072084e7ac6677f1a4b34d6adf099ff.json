{"ast":null,"code":"import * as d3 from \"d3\";\nconst getColor = val => {\n  if (val >= 7) {\n    return \"green\";\n  } else if (6 <= val && val < 7) {\n    return \"yellow\";\n  } else if (5 <= val && val < 6) {\n    return \"orange\";\n  } else {\n    return \"red\";\n  }\n};\nexport function PcpChart({\n  dataPcp,\n  dimensions,\n  selectedYear\n}) {\n  d3.select(\"#svg_3\").html(\"\");\n  const currentData = dataPcp.find(el => el.year === selectedYear);\n  const color = getColor(currentData.happiness_score);\n  var margin = {\n      top: 90,\n      right: 80,\n      bottom: 35,\n      left: 80\n    },\n    width = 1200 - margin.left - margin.right,\n    height = 600 - margin.top - margin.bottom;\n  var x = d3.scalePoint().range([0, width], 1),\n    y = {},\n    dragging = {};\n  var line = d3.line(),\n    axis = d3.axisLeft(),\n    background,\n    foreground;\n  var svg = d3.select(\"#svg_3\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  x.domain(dimensions = d3.keys(dataPcp[0]).filter(function (d) {\n    if (d === \"clusters\" || d === \"year\") return false;\n    return true;\n  }));\n  var g = svg.selectAll(\".dimension\").data(dimensions).enter().append(\"g\").attr(\"class\", \"dimension\").attr(\"transform\", function (d) {\n    return \"translate(\" + x(d) + \")\";\n  });\n  g.append(\"g\").attr(\"class\", \"axis\").each(function (d) {\n    d3.select(this).call(axis.scale(y[d]));\n  });\n  g.append(\"text\").style(\"text-anchor\", \"middle\").attr(\"x\", 15).attr(\"y\", -15).attr(\"transform\", \"rotate(-25)\").text(function (d) {\n    return d;\n  });\n}\n_c = PcpChart;\nvar _c;\n$RefreshReg$(_c, \"PcpChart\");","map":{"version":3,"names":["d3","getColor","val","PcpChart","dataPcp","dimensions","selectedYear","select","html","currentData","find","el","year","color","happiness_score","margin","top","right","bottom","left","width","height","x","scalePoint","range","y","dragging","line","axis","axisLeft","background","foreground","svg","attr","append","domain","keys","filter","d","g","selectAll","data","enter","each","call","scale","style","text","_c","$RefreshReg$"],"sources":["/Users/nithinkatla00/My-projects/Viz-project/frontend/src/utils/svg-pcpplot.js"],"sourcesContent":["import * as d3 from \"d3\";\n\nconst getColor = (val) => {\n  if (val >= 7) {\n    return \"green\";\n  } else if (6 <= val && val < 7) {\n    return \"yellow\";\n  } else if (5 <= val && val < 6) {\n    return \"orange\";\n  } else {\n    return \"red\";\n  }\n};\n\nexport function PcpChart({ dataPcp, dimensions, selectedYear }) {\n  d3.select(\"#svg_3\").html(\"\");\n  const currentData = dataPcp.find((el) => el.year === selectedYear);\n  const color = getColor(currentData.happiness_score);\n\n  var margin = { top: 90, right: 80, bottom: 35, left: 80 },\n    width = 1200 - margin.left - margin.right,\n    height = 600 - margin.top - margin.bottom;\n\n  var x = d3.scalePoint().range([0, width], 1),\n    y = {},\n    dragging = {};\n\n  var line = d3.line(),\n    axis = d3.axisLeft(),\n    background,\n    foreground;\n\n  var svg = d3\n    .select(\"#svg_3\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  x.domain(\n    (dimensions = d3.keys(dataPcp[0]).filter(function (d) {\n      if (d === \"clusters\" || d === \"year\") return false;\n      return true;\n    }))\n  );\n\n  var g = svg\n    .selectAll(\".dimension\")\n    .data(dimensions)\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"dimension\")\n    .attr(\"transform\", function (d) {\n      return \"translate(\" + x(d) + \")\";\n    });\n\n  g.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .each(function (d) {\n      d3.select(this).call(axis.scale(y[d]));\n    });\n  g.append(\"text\")\n    .style(\"text-anchor\", \"middle\")\n    .attr(\"x\", 15)\n    .attr(\"y\", -15)\n    .attr(\"transform\", \"rotate(-25)\")\n    .text(function (d) {\n      return d;\n    });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}