{"ast":null,"code":"import { map } from \"d3-collection\";\nimport { dispatch } from \"d3-dispatch\";\nexport default function (url, callback) {\n  var request,\n    event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n    mimeType,\n    headers = map(),\n    xhr = new XMLHttpRequest(),\n    user = null,\n    password = null,\n    response,\n    responseType,\n    timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\" && !(\"withCredentials\" in xhr) && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest();\n  \"onload\" in xhr ? xhr.onload = xhr.onerror = xhr.ontimeout = respond : xhr.onreadystatechange = function (o) {\n    xhr.readyState > 3 && respond(o);\n  };\n  function respond(o) {\n    var status = xhr.status,\n      result;\n    if (!status && hasResponse(xhr) || status >= 200 && status < 300 || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n  xhr.onprogress = function (e) {\n    event.call(\"progress\", request, e);\n  };\n  request = {\n    header: function (name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);else headers.set(name, value + \"\");\n      return request;\n    },\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function (value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function (value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n    timeout: function (value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n    user: function (value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n    password: function (value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function (value) {\n      response = value;\n      return request;\n    },\n    // Alias for send(\"GET\", …).\n    get: function (data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n    // Alias for send(\"POST\", …).\n    post: function (data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n    // If callback is non-null, it will be used for error and load events.\n    send: function (method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function (value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function (xhr) {\n        callback(null, xhr);\n      });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n    abort: function () {\n      xhr.abort();\n      return request;\n    },\n    on: function () {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n  return request;\n}\nfunction fixCallback(callback) {\n  return function (error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\" ? xhr.response // null on error\n  : xhr.responseText; // \"\" on error\n}","map":{"version":3,"names":["map","dispatch","url","callback","request","event","mimeType","headers","xhr","XMLHttpRequest","user","password","response","responseType","timeout","XDomainRequest","test","onload","onerror","ontimeout","respond","onreadystatechange","o","readyState","status","result","hasResponse","call","e","onprogress","header","name","value","toLowerCase","arguments","length","get","remove","set","data","send","post","method","open","has","setRequestHeader","each","overrideMimeType","fixCallback","on","abort","apply","Error","error","type","responseText"],"sources":["/Users/nithinkatla00/My-projects/Viz-project/frontend/node_modules/d3-request/src/request.js"],"sourcesContent":["import {map} from \"d3-collection\";\nimport {dispatch} from \"d3-dispatch\";\n\nexport default function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n}\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}