{"ast":null,"code":"import * as d3 from \"d3\";\nimport { select } from \"d3-selection\";\nimport transition from \"d3-transition\";\nexport function radarChart(data, selectedColumn) {\n  const max = Math.max;\n  const sin = Math.sin;\n  const cos = Math.cos;\n  const HALF_PI = Math.PI / 2;\n  const RadarChart = function RadarChart(parent_selector, data, options) {\n    // Function to wrap text\n    const wrap = (text, width) => {\n      // Function body remains the same\n    };\n\n    // Configuration options\n    const cfg = {\n      w: 600,\n      h: 600,\n      margin: {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      },\n      levels: 5,\n      maxValue: 0,\n      labelFactor: 1.25,\n      wrapWidth: 60,\n      opacityArea: 0.35,\n      dotRadius: 4,\n      opacityCircles: 0.1,\n      strokeWidth: 2,\n      roundStrokes: false,\n      color: d3.scaleOrdinal().range([\"#26AF32\"]),\n      format: \".0f\",\n      unit: \"\",\n      legend: false\n    };\n    if (options) {\n      Object.keys(options).forEach(key => {\n        if (options[key] !== undefined) {\n          cfg[key] = options[key];\n        }\n      });\n    }\n\n    // Extract axes and calculate max value based on selected column\n    const allAxis = data[0].axes.map(i => i.axis);\n    const total = allAxis.length;\n    const maxValue = max(cfg.maxValue, d3.max(data, d => d3.max(d.axes, a => a.value)));\n\n    // Scale based on column min and max values\n    const rScale = d3.scaleLinear().range([0, cfg.w / 2]).domain([0, maxValue]);\n\n    // Function to generate radar line\n    const radarLine = d3.radialLine().curve(d3.curveLinearClosed).radius(d => rScale(d.value)).angle((d, i) => i * (Math.PI * 2) / total);\n\n    // Remove existing SVG\n    d3.select(parent_selector).select(\"svg\").remove();\n\n    // Append new SVG\n    const svg = d3.select(parent_selector).append(\"svg\").attr(\"width\", cfg.w + cfg.margin.left + cfg.margin.right).attr(\"height\", cfg.h + cfg.margin.top + cfg.margin.bottom).attr(\"class\", \"radar\");\n\n    // Append main group\n    const g = svg.append(\"g\").attr(\"transform\", \"translate(\" + (cfg.w / 2 + cfg.margin.left) + \",\" + (cfg.h / 2 + cfg.margin.top) + \")\");\n\n    // Append other elements (axes, circles, etc.)\n    // (The implementation of these parts remains the same)\n\n    return svg;\n  };\n\n  // Calculate data for selected column\n  const finalData = [{\n    name: selectedColumn,\n    axes: data.map(el => ({\n      axis: el.year,\n      value: el[selectedColumn]\n    }))\n  }];\n\n  // Update options with new max value\n  const radarChartOptions = {\n    ...{\n      w: 250,\n      h: 300,\n      margin: {\n        top: 50,\n        right: 80,\n        bottom: 50,\n        left: 80\n      },\n      levels: 5,\n      roundStrokes: true,\n      color: d3.scaleOrdinal().range([\"#26AF32\"]),\n      format: \".0f\"\n    },\n    maxValue: d3.max(data, d => d[selectedColumn])\n  };\n\n  // Call radar chart function\n  RadarChart(\".radarChart\", finalData, radarChartOptions);\n}","map":{"version":3,"names":["d3","select","transition","radarChart","data","selectedColumn","max","Math","sin","cos","HALF_PI","PI","RadarChart","parent_selector","options","wrap","text","width","cfg","w","h","margin","top","right","bottom","left","levels","maxValue","labelFactor","wrapWidth","opacityArea","dotRadius","opacityCircles","strokeWidth","roundStrokes","color","scaleOrdinal","range","format","unit","legend","Object","keys","forEach","key","undefined","allAxis","axes","map","i","axis","total","length","d","a","value","rScale","scaleLinear","domain","radarLine","radialLine","curve","curveLinearClosed","radius","angle","remove","svg","append","attr","g","finalData","name","el","year","radarChartOptions"],"sources":["/Users/nithinkatla00/My-projects/Viz-project/frontend/src/utils/svg-radarchart.js"],"sourcesContent":["import * as d3 from \"d3\";\n\nimport { select } from \"d3-selection\";\nimport transition from \"d3-transition\";\n\nexport function radarChart(data, selectedColumn) {\n  const max = Math.max;\n  const sin = Math.sin;\n  const cos = Math.cos;\n  const HALF_PI = Math.PI / 2;\n\n  const RadarChart = function RadarChart(parent_selector, data, options) {\n    // Function to wrap text\n    const wrap = (text, width) => {\n      // Function body remains the same\n    };\n\n    // Configuration options\n    const cfg = {\n      w: 600,\n      h: 600,\n      margin: { top: 20, right: 20, bottom: 20, left: 20 },\n      levels: 5,\n      maxValue: 0,\n      labelFactor: 1.25,\n      wrapWidth: 60,\n      opacityArea: 0.35,\n      dotRadius: 4,\n      opacityCircles: 0.1,\n      strokeWidth: 2,\n      roundStrokes: false,\n      color: d3.scaleOrdinal().range([\"#26AF32\"]),\n      format: \".0f\",\n      unit: \"\",\n      legend: false\n    };\n\n    if (options) {\n      Object.keys(options).forEach((key) => {\n        if (options[key] !== undefined) {\n          cfg[key] = options[key];\n        }\n      });\n    }\n\n    // Extract axes and calculate max value based on selected column\n    const allAxis = data[0].axes.map((i) => i.axis);\n    const total = allAxis.length;\n    const maxValue = max(\n      cfg.maxValue,\n      d3.max(data, (d) => d3.max(d.axes, (a) => a.value))\n    );\n\n    // Scale based on column min and max values\n    const rScale = d3\n      .scaleLinear()\n      .range([0, cfg.w / 2])\n      .domain([0, maxValue]);\n\n    // Function to generate radar line\n    const radarLine = d3\n      .radialLine()\n      .curve(d3.curveLinearClosed)\n      .radius((d) => rScale(d.value))\n      .angle((d, i) => (i * (Math.PI * 2)) / total);\n\n    // Remove existing SVG\n    d3.select(parent_selector).select(\"svg\").remove();\n\n    // Append new SVG\n    const svg = d3\n      .select(parent_selector)\n      .append(\"svg\")\n      .attr(\"width\", cfg.w + cfg.margin.left + cfg.margin.right)\n      .attr(\"height\", cfg.h + cfg.margin.top + cfg.margin.bottom)\n      .attr(\"class\", \"radar\");\n\n    // Append main group\n    const g = svg\n      .append(\"g\")\n      .attr(\n        \"transform\",\n        \"translate(\" +\n          (cfg.w / 2 + cfg.margin.left) +\n          \",\" +\n          (cfg.h / 2 + cfg.margin.top) +\n          \")\"\n      );\n\n    // Append other elements (axes, circles, etc.)\n    // (The implementation of these parts remains the same)\n\n    return svg;\n  };\n\n  // Calculate data for selected column\n  const finalData = [\n    {\n      name: selectedColumn,\n      axes: data.map((el) => ({ axis: el.year, value: el[selectedColumn] }))\n    }\n  ];\n\n  // Update options with new max value\n  const radarChartOptions = {\n    ...{\n      w: 250,\n      h: 300,\n      margin: { top: 50, right: 80, bottom: 50, left: 80 },\n      levels: 5,\n      roundStrokes: true,\n      color: d3.scaleOrdinal().range([\"#26AF32\"]),\n      format: \".0f\"\n    },\n    maxValue: d3.max(data, (d) => d[selectedColumn])\n  };\n\n  // Call radar chart function\n  RadarChart(\".radarChart\", finalData, radarChartOptions);\n}\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,IAAI;AAExB,SAASC,MAAM,QAAQ,cAAc;AACrC,OAAOC,UAAU,MAAM,eAAe;AAEtC,OAAO,SAASC,UAAUA,CAACC,IAAI,EAAEC,cAAc,EAAE;EAC/C,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG;EACpB,MAAME,GAAG,GAAGD,IAAI,CAACC,GAAG;EACpB,MAAMC,GAAG,GAAGF,IAAI,CAACE,GAAG;EACpB,MAAMC,OAAO,GAAGH,IAAI,CAACI,EAAE,GAAG,CAAC;EAE3B,MAAMC,UAAU,GAAG,SAASA,UAAUA,CAACC,eAAe,EAAET,IAAI,EAAEU,OAAO,EAAE;IACrE;IACA,MAAMC,IAAI,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC5B;IAAA,CACD;;IAED;IACA,MAAMC,GAAG,GAAG;MACVC,CAAC,EAAE,GAAG;MACNC,CAAC,EAAE,GAAG;MACNC,MAAM,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAC;MACpDC,MAAM,EAAE,CAAC;MACTC,QAAQ,EAAE,CAAC;MACXC,WAAW,EAAE,IAAI;MACjBC,SAAS,EAAE,EAAE;MACbC,WAAW,EAAE,IAAI;MACjBC,SAAS,EAAE,CAAC;MACZC,cAAc,EAAE,GAAG;MACnBC,WAAW,EAAE,CAAC;MACdC,YAAY,EAAE,KAAK;MACnBC,KAAK,EAAEnC,EAAE,CAACoC,YAAY,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC;MAC3CC,MAAM,EAAE,KAAK;MACbC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE;IACV,CAAC;IAED,IAAI1B,OAAO,EAAE;MACX2B,MAAM,CAACC,IAAI,CAAC5B,OAAO,CAAC,CAAC6B,OAAO,CAAEC,GAAG,IAAK;QACpC,IAAI9B,OAAO,CAAC8B,GAAG,CAAC,KAAKC,SAAS,EAAE;UAC9B3B,GAAG,CAAC0B,GAAG,CAAC,GAAG9B,OAAO,CAAC8B,GAAG,CAAC;QACzB;MACF,CAAC,CAAC;IACJ;;IAEA;IACA,MAAME,OAAO,GAAG1C,IAAI,CAAC,CAAC,CAAC,CAAC2C,IAAI,CAACC,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC;IAC/C,MAAMC,KAAK,GAAGL,OAAO,CAACM,MAAM;IAC5B,MAAMzB,QAAQ,GAAGrB,GAAG,CAClBY,GAAG,CAACS,QAAQ,EACZ3B,EAAE,CAACM,GAAG,CAACF,IAAI,EAAGiD,CAAC,IAAKrD,EAAE,CAACM,GAAG,CAAC+C,CAAC,CAACN,IAAI,EAAGO,CAAC,IAAKA,CAAC,CAACC,KAAK,CAAC,CACpD,CAAC;;IAED;IACA,MAAMC,MAAM,GAAGxD,EAAE,CACdyD,WAAW,CAAC,CAAC,CACbpB,KAAK,CAAC,CAAC,CAAC,EAAEnB,GAAG,CAACC,CAAC,GAAG,CAAC,CAAC,CAAC,CACrBuC,MAAM,CAAC,CAAC,CAAC,EAAE/B,QAAQ,CAAC,CAAC;;IAExB;IACA,MAAMgC,SAAS,GAAG3D,EAAE,CACjB4D,UAAU,CAAC,CAAC,CACZC,KAAK,CAAC7D,EAAE,CAAC8D,iBAAiB,CAAC,CAC3BC,MAAM,CAAEV,CAAC,IAAKG,MAAM,CAACH,CAAC,CAACE,KAAK,CAAC,CAAC,CAC9BS,KAAK,CAAC,CAACX,CAAC,EAAEJ,CAAC,KAAMA,CAAC,IAAI1C,IAAI,CAACI,EAAE,GAAG,CAAC,CAAC,GAAIwC,KAAK,CAAC;;IAE/C;IACAnD,EAAE,CAACC,MAAM,CAACY,eAAe,CAAC,CAACZ,MAAM,CAAC,KAAK,CAAC,CAACgE,MAAM,CAAC,CAAC;;IAEjD;IACA,MAAMC,GAAG,GAAGlE,EAAE,CACXC,MAAM,CAACY,eAAe,CAAC,CACvBsD,MAAM,CAAC,KAAK,CAAC,CACbC,IAAI,CAAC,OAAO,EAAElD,GAAG,CAACC,CAAC,GAAGD,GAAG,CAACG,MAAM,CAACI,IAAI,GAAGP,GAAG,CAACG,MAAM,CAACE,KAAK,CAAC,CACzD6C,IAAI,CAAC,QAAQ,EAAElD,GAAG,CAACE,CAAC,GAAGF,GAAG,CAACG,MAAM,CAACC,GAAG,GAAGJ,GAAG,CAACG,MAAM,CAACG,MAAM,CAAC,CAC1D4C,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC;;IAEzB;IACA,MAAMC,CAAC,GAAGH,GAAG,CACVC,MAAM,CAAC,GAAG,CAAC,CACXC,IAAI,CACH,WAAW,EACX,YAAY,IACTlD,GAAG,CAACC,CAAC,GAAG,CAAC,GAAGD,GAAG,CAACG,MAAM,CAACI,IAAI,CAAC,GAC7B,GAAG,IACFP,GAAG,CAACE,CAAC,GAAG,CAAC,GAAGF,GAAG,CAACG,MAAM,CAACC,GAAG,CAAC,GAC5B,GACJ,CAAC;;IAEH;IACA;;IAEA,OAAO4C,GAAG;EACZ,CAAC;;EAED;EACA,MAAMI,SAAS,GAAG,CAChB;IACEC,IAAI,EAAElE,cAAc;IACpB0C,IAAI,EAAE3C,IAAI,CAAC4C,GAAG,CAAEwB,EAAE,KAAM;MAAEtB,IAAI,EAAEsB,EAAE,CAACC,IAAI;MAAElB,KAAK,EAAEiB,EAAE,CAACnE,cAAc;IAAE,CAAC,CAAC;EACvE,CAAC,CACF;;EAED;EACA,MAAMqE,iBAAiB,GAAG;IACxB,GAAG;MACDvD,CAAC,EAAE,GAAG;MACNC,CAAC,EAAE,GAAG;MACNC,MAAM,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAC;MACpDC,MAAM,EAAE,CAAC;MACTQ,YAAY,EAAE,IAAI;MAClBC,KAAK,EAAEnC,EAAE,CAACoC,YAAY,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC;MAC3CC,MAAM,EAAE;IACV,CAAC;IACDX,QAAQ,EAAE3B,EAAE,CAACM,GAAG,CAACF,IAAI,EAAGiD,CAAC,IAAKA,CAAC,CAAChD,cAAc,CAAC;EACjD,CAAC;;EAED;EACAO,UAAU,CAAC,aAAa,EAAE0D,SAAS,EAAEI,iBAAiB,CAAC;AACzD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}