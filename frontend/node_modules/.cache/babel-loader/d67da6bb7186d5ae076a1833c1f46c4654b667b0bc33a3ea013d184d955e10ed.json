{"ast":null,"code":"var _jsxFileName = \"/Users/nithinkatla00/My-projects/Viz-project/frontend/src/components/line-graph.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Svg_Line_Graph } from \"../utils/svg-linegraph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LineGraph({\n  data,\n  selectedItem\n}) {\n  _s();\n  const [maxData, setMaxData] = useState([]);\n  const [minData, setMinData] = useState([]);\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/country_details\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        country: [],\n        year: []\n      })\n    }).then(response => response.json()).then(data => {\n      const output = JSON.parse(JSON.stringify(data));\n      const maxCountry = output.data.filter(el => el.year === 2023).reduce((acc, curr) => {\n        if (!acc || curr[selectedItem] > acc[selectedItem]) {\n          return curr;\n        } else {\n          return acc;\n        }\n      }, null);\n\n      // Extract the country name\n\n      const maxCountryName = maxCountry ? maxCountry.country : null;\n      setMaxData(output.data.filter(el => el.country === maxCountryName));\n      const minCountry = output.data.filter(el => el.year === 2023).reduce((acc, curr) => {\n        if (!acc || curr[selectedItem] < acc[selectedItem]) {\n          return curr;\n        } else {\n          return acc;\n        }\n      }, null);\n\n      // Extract the country name\n      const minCountryName = minCountry ? minCountry.country : null;\n      setMinData(output.data.filter(el => el.country === minCountryName));\n    });\n    Svg_Line_Graph({\n      data,\n      selectedItem,\n      lowestData: minData,\n      highestData: maxData\n    });\n  }, [data, selectedItem]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"line_graph\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n}\n_s(LineGraph, \"1w9h6MMB7Gt5QG7/TFQDjNDJi+s=\");\n_c = LineGraph;\nexport default LineGraph;\nvar _c;\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"names":["React","useEffect","useState","Svg_Line_Graph","jsxDEV","_jsxDEV","LineGraph","data","selectedItem","_s","maxData","setMaxData","minData","setMinData","fetch","method","headers","body","JSON","stringify","country","year","then","response","json","output","parse","maxCountry","filter","el","reduce","acc","curr","maxCountryName","minCountry","minCountryName","lowestData","highestData","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nithinkatla00/My-projects/Viz-project/frontend/src/components/line-graph.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Svg_Line_Graph } from \"../utils/svg-linegraph\";\n\nfunction LineGraph({ data, selectedItem }) {\n  const [maxData, setMaxData] = useState([]);\n  const [minData, setMinData] = useState([]);\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/country_details\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        country: [],\n        year: []\n      })\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        const output = JSON.parse(JSON.stringify(data));\n\n        const maxCountry = output.data\n          .filter((el) => el.year === 2023)\n          .reduce((acc, curr) => {\n            if (!acc || curr[selectedItem] > acc[selectedItem]) {\n              return curr;\n            } else {\n              return acc;\n            }\n          }, null);\n\n        // Extract the country name\n\n        const maxCountryName = maxCountry ? maxCountry.country : null;\n        setMaxData(output.data.filter((el) => el.country === maxCountryName));\n\n        const minCountry = output.data\n          .filter((el) => el.year === 2023)\n          .reduce((acc, curr) => {\n            if (!acc || curr[selectedItem] < acc[selectedItem]) {\n              return curr;\n            } else {\n              return acc;\n            }\n          }, null);\n\n        // Extract the country name\n        const minCountryName = minCountry ? minCountry.country : null;\n        setMinData(output.data.filter((el) => el.country === minCountryName));\n      });\n\n    Svg_Line_Graph({\n      data,\n      selectedItem,\n      lowestData: minData,\n      highestData: maxData\n    });\n  }, [data, selectedItem]);\n\n  return <div id=\"line_graph\"></div>;\n}\n\nexport default LineGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}