{"ast":null,"code":"import * as d3 from \"d3\";\nimport { schemeSet2 } from \"d3-scale-chromatic\";\nexport function Svg_Line_Graph({\n  data,\n  selectedItem\n}) {\n  var margin = {\n      top: 10,\n      right: 100,\n      bottom: 30,\n      left: 30\n    },\n    width = 460 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n  // append the svg object to the body of the page\n  var svg = d3.select(\"#line_graph\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  // List of groups (here I have one group per column)\n\n  var myColor = d3.scaleOrdinal().domain([]).range(schemeSet2);\n  // Add X axis\n  var x = d3.scaleLinear().domain([2016, 2023]).range([0, width]);\n  svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x).tickValues(d3.range(2016, 2024)).tickFormat(d3.format(\"d\"))); // Generate ticks for every year from 2016 to 2023\n  // Add Y axis\n  var y = d3.scaleLinear().domain([0, 100]).range([height, 0]);\n  svg.append(\"g\").call(d3.axisLeft(y));\n  // Initialize line with group a\n  var line = svg.append(\"g\").append(\"path\").datum(data).attr(\"d\", d3.line().x(function (d) {\n    return x(+d.year);\n  }).y(function (d) {\n    return y(+d.healthy_life_expectancy);\n  })).attr(\"stroke\", function (d) {\n    return myColor(\"valueA\");\n  }).style(\"stroke-width\", 4).style(\"fill\", \"none\");\n  // A function that update the chart\n  function update(selectedGroup) {\n    // Create new data with the selection?\n    var dataFilter = data.map(function (d) {\n      return {\n        time: d.time,\n        value: d[selectedGroup]\n      };\n    });\n    // Give these new data to update line\n    line.datum(dataFilter).transition().duration(1000).attr(\"d\", d3.line().x(function (d) {\n      return x(+d.year);\n    }).y(function (d) {\n      return y(+d.healthy_life_expectancy);\n    })).attr(\"stroke\", function (d) {\n      return myColor(selectedGroup);\n    });\n  }\n  // When the button is changed, run the updateChart function\n  d3.select(\"#selectButton\").on(\"change\", function (d) {\n    // recover the option that has been chosen\n    var selectedOption = d3.select(this).property(\"value\");\n    // run the updateChart function with this selected option\n    update(selectedOption);\n  });\n}\n_c = Svg_Line_Graph;\nvar _c;\n$RefreshReg$(_c, \"Svg_Line_Graph\");","map":{"version":3,"names":["d3","schemeSet2","Svg_Line_Graph","data","selectedItem","margin","top","right","bottom","left","width","height","svg","select","attr","append","myColor","scaleOrdinal","domain","range","x","scaleLinear","call","axisBottom","tickValues","tickFormat","format","y","axisLeft","line","datum","d","year","healthy_life_expectancy","style","update","selectedGroup","dataFilter","map","time","value","transition","duration","on","selectedOption","property","_c","$RefreshReg$"],"sources":["/Users/nithinkatla00/My-projects/Viz-project/frontend/src/utils/svg-linegraph.js"],"sourcesContent":["import * as d3 from \"d3\";\nimport { schemeSet2 } from \"d3-scale-chromatic\";\n\nexport function Svg_Line_Graph({ data, selectedItem }) {\n  var margin = { top: 10, right: 100, bottom: 30, left: 30 },\n    width = 460 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n  // append the svg object to the body of the page\n  var svg = d3\n    .select(\"#line_graph\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  // List of groups (here I have one group per column)\n\n  var myColor = d3.scaleOrdinal().domain([]).range(schemeSet2);\n  // Add X axis\n  var x = d3.scaleLinear().domain([2016, 2023]).range([0, width]);\n  svg\n    .append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(\n      d3\n        .axisBottom(x)\n        .tickValues(d3.range(2016, 2024))\n        .tickFormat(d3.format(\"d\"))\n    ); // Generate ticks for every year from 2016 to 2023\n  // Add Y axis\n  var y = d3.scaleLinear().domain([0, 100]).range([height, 0]);\n  svg.append(\"g\").call(d3.axisLeft(y));\n  // Initialize line with group a\n  var line = svg\n    .append(\"g\")\n    .append(\"path\")\n    .datum(data)\n    .attr(\n      \"d\",\n      d3\n        .line()\n        .x(function (d) {\n          return x(+d.year);\n        })\n        .y(function (d) {\n          return y(+d.healthy_life_expectancy);\n        })\n    )\n    .attr(\"stroke\", function (d) {\n      return myColor(\"valueA\");\n    })\n    .style(\"stroke-width\", 4)\n    .style(\"fill\", \"none\");\n  // A function that update the chart\n  function update(selectedGroup) {\n    // Create new data with the selection?\n    var dataFilter = data.map(function (d) {\n      return { time: d.time, value: d[selectedGroup] };\n    });\n    // Give these new data to update line\n    line\n      .datum(dataFilter)\n      .transition()\n      .duration(1000)\n      .attr(\n        \"d\",\n        d3\n          .line()\n          .x(function (d) {\n            return x(+d.year);\n          })\n          .y(function (d) {\n            return y(+d.healthy_life_expectancy);\n          })\n      )\n      .attr(\"stroke\", function (d) {\n        return myColor(selectedGroup);\n      });\n  }\n  // When the button is changed, run the updateChart function\n  d3.select(\"#selectButton\").on(\"change\", function (d) {\n    // recover the option that has been chosen\n    var selectedOption = d3.select(this).property(\"value\");\n    // run the updateChart function with this selected option\n    update(selectedOption);\n  });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}