{"ast":null,"code":"import * as d3 from \"d3\";\nconst getColor = val => {\n  if (val >= 7) {\n    return \"green\";\n  } else if (6 <= val && val < 7) {\n    return \"blue\";\n  } else if (5 <= val && val < 6) {\n    return \"orange\";\n  } else {\n    return \"red\";\n  }\n};\nexport function PcpChart({\n  dataPcp,\n  dimensions,\n  selectedYear\n}) {\n  d3.select(\"#svg_3\").html(\"\");\n  const currentData = dataPcp.find(el => el.year === selectedYear);\n  const color = getColor(currentData === null || currentData === void 0 ? void 0 : currentData.happiness_score);\n  var margin = {\n      top: 90,\n      right: 80,\n      bottom: 35,\n      left: 80\n    },\n    width = 1200 - margin.left - margin.right,\n    height = 600 - margin.top - margin.bottom;\n  var x = d3.scalePoint().range([0, width], 1),\n    y = {},\n    dragging = {};\n  var line = d3.line(),\n    axis = d3.axisLeft(),\n    background,\n    foreground;\n  var svg = d3.select(\"#svg_3\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  x.domain(dimensions = d3.keys(dataPcp[0]).filter(function (d) {\n    if (d === \"clusters\") return false;\n    if (d === \"year\") {\n      y[d] = d3.scaleBand().domain(dataPcp.map(function (p) {\n        return p[d];\n      })).rangeRound([height, 0]).padding(1);\n    } else {\n      y[d] = d3.scaleLinear().domain(d3.extent(dataPcp, function (p) {\n        return +p[d];\n      })).range([height, 0]);\n    }\n    return true;\n  }));\n\n  // Add grey background lines for context.\n  background = svg.append(\"g\").attr(\"class\", \"background\").selectAll(\"path\").data(dataPcp).enter().append(\"path\").attr(\"d\", path);\n\n  // Add blue foreground lines for focus.\n  foreground = svg.append(\"g\").attr(\"class\", \"foreground\").selectAll(\"path\").data(dataPcp).enter().append(\"path\").attr(\"d\", path).attr(\"style\", function (d) {\n    return \"stroke:\" + color + \";\";\n  });\n\n  // Add a group element for each dimension.\n  var g = svg.selectAll(\".dimension\").data(dimensions).enter().append(\"g\").attr(\"class\", \"dimension\").attr(\"transform\", function (d) {\n    return \"translate(\" + x(d) + \")\";\n  });\n  // .call(\n  //   d3\n  //     .drag()\n  //     .subject(function (d) {\n  //       return { x: x(d) };\n  //     })\n  //     .on(\"start\", function (d) {\n  //       dragging[d] = x(d);\n  //       background.attr(\"visibility\", \"hidden\");\n  //     })\n  //     .on(\"drag\", function (d) {\n  //       dragging[d] = Math.min(width, Math.max(0, d3.event.x));\n  //       foreground.attr(\"d\", path);\n  //       dimensions.sort(function (a, b) {\n  //         return position(a) - position(b);\n  //       });\n  //       x.domain(dimensions);\n  //       g.attr(\"transform\", function (d) {\n  //         return \"translate(\" + position(d) + \")\";\n  //       });\n  //     })\n  //     .on(\"end\", function (d) {\n  //       delete dragging[d];\n  //       transition(d3.select(this)).attr(\n  //         \"transform\",\n  //         \"translate(\" + x(d) + \")\"\n  //       );\n  //       transition(foreground).attr(\"d\", path);\n  //       background\n  //         .attr(\"d\", path)\n  //         .transition()\n  //         .delay(500)\n  //         .duration(0)\n  //         .attr(\"visibility\", null);\n  //     })\n  // );\n\n  // Add an axis and title.\n  g.append(\"g\").attr(\"class\", \"axis\").each(function (d) {\n    d3.select(this).call(axis.scale(y[d]));\n  });\n  g.append(\"text\").style(\"text-anchor\", \"middle\").attr(\"x\", 15).attr(\"y\", -15).attr(\"transform\", \"rotate(-25)\").text(function (d) {\n    return d;\n  });\n\n  // Add and store a brush for each axis.\n\n  // const yBrushes = {};\n  // g.append(\"g\")\n  //   .attr(\"class\", \"brush\")\n  //   .each(function (d) {\n  //     d3.select(this).call(\n  //       (y[d].brush = d3\n  //         .brushY()\n  //         .extent([\n  //           [-10, 0],\n  //           [10, height]\n  //         ])\n  //         .on(\"start\", brushstart)\n  //         .on(\"brush\", brush))\n  //     );\n  //   });\n\n  // function brush() {\n  //   var actives = [];\n  //   //filter brushed extents\n  //   svg\n  //     .selectAll(\".brush\")\n  //     .filter(function (d) {\n  //       return d3.brushSelection(this);\n  //     })\n  //     .each(function (d) {\n  //       actives.push({\n  //         dimension: d,\n  //         extent: d3.brushSelection(this)\n  //       });\n  //     });\n  //   //set un-brushed foreground line disappear\n  //   foreground.classed(\"fade\", function (d, i) {\n  //     return !actives.every(function (active) {\n  //       var dim = active.dimension;\n  //       return (\n  //         active.extent[0] <= y[dim](d[dim]) &&\n  //         y[dim](d[dim]) <= active.extent[1]\n  //       );\n  //     });\n  //   });\n  // }\n\n  function position(d) {\n    var v = dragging[d];\n    return v == null ? x(d) : v;\n  }\n  function transition(g) {\n    return g.transition().duration(500);\n  }\n\n  // Returns the path for a given data point.\n  function path(d) {\n    return line(dimensions.map(function (p) {\n      return [position(p), y[p](d[p])];\n    }));\n  }\n  function brushstart() {\n    if (d3.event.sourceEvent) {\n      d3.event.sourceEvent.stopPropagation();\n    }\n  }\n}\n_c = PcpChart;\nvar _c;\n$RefreshReg$(_c, \"PcpChart\");","map":{"version":3,"names":["d3","getColor","val","PcpChart","dataPcp","dimensions","selectedYear","select","html","currentData","find","el","year","color","happiness_score","margin","top","right","bottom","left","width","height","x","scalePoint","range","y","dragging","line","axis","axisLeft","background","foreground","svg","attr","append","domain","keys","filter","d","scaleBand","map","p","rangeRound","padding","scaleLinear","extent","selectAll","data","enter","path","g","each","call","scale","style","text","position","v","transition","duration","brushstart","event","sourceEvent","stopPropagation","_c","$RefreshReg$"],"sources":["/Users/nithinkatla00/My-projects/Viz-project/frontend/src/utils/svg-pcpplot.js"],"sourcesContent":["import * as d3 from \"d3\";\n\nconst getColor = (val) => {\n  if (val >= 7) {\n    return \"green\";\n  } else if (6 <= val && val < 7) {\n    return \"blue\";\n  } else if (5 <= val && val < 6) {\n    return \"orange\";\n  } else {\n    return \"red\";\n  }\n};\nexport function PcpChart({ dataPcp, dimensions, selectedYear }) {\n  d3.select(\"#svg_3\").html(\"\");\n  const currentData = dataPcp.find((el) => el.year === selectedYear);\n  const color = getColor(currentData?.happiness_score);\n  var margin = { top: 90, right: 80, bottom: 35, left: 80 },\n    width = 1200 - margin.left - margin.right,\n    height = 600 - margin.top - margin.bottom;\n\n  var x = d3.scalePoint().range([0, width], 1),\n    y = {},\n    dragging = {};\n\n  var line = d3.line(),\n    axis = d3.axisLeft(),\n    background,\n    foreground;\n\n  var svg = d3\n    .select(\"#svg_3\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  x.domain(\n    (dimensions = d3.keys(dataPcp[0]).filter(function (d) {\n      if (d === \"clusters\") return false;\n      if (d === \"year\") {\n        y[d] = d3\n          .scaleBand()\n          .domain(\n            dataPcp.map(function (p) {\n              return p[d];\n            })\n          )\n          .rangeRound([height, 0])\n          .padding(1);\n      } else {\n        y[d] = d3\n          .scaleLinear()\n          .domain(\n            d3.extent(dataPcp, function (p) {\n              return +p[d];\n            })\n          )\n          .range([height, 0]);\n      }\n      return true;\n    }))\n  );\n\n  // Add grey background lines for context.\n  background = svg\n    .append(\"g\")\n    .attr(\"class\", \"background\")\n    .selectAll(\"path\")\n    .data(dataPcp)\n    .enter()\n    .append(\"path\")\n    .attr(\"d\", path);\n\n  // Add blue foreground lines for focus.\n  foreground = svg\n    .append(\"g\")\n    .attr(\"class\", \"foreground\")\n    .selectAll(\"path\")\n    .data(dataPcp)\n    .enter()\n    .append(\"path\")\n    .attr(\"d\", path)\n    .attr(\"style\", function (d) {\n      return \"stroke:\" + color + \";\";\n    });\n\n  // Add a group element for each dimension.\n  var g = svg\n    .selectAll(\".dimension\")\n    .data(dimensions)\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"dimension\")\n    .attr(\"transform\", function (d) {\n      return \"translate(\" + x(d) + \")\";\n    });\n  // .call(\n  //   d3\n  //     .drag()\n  //     .subject(function (d) {\n  //       return { x: x(d) };\n  //     })\n  //     .on(\"start\", function (d) {\n  //       dragging[d] = x(d);\n  //       background.attr(\"visibility\", \"hidden\");\n  //     })\n  //     .on(\"drag\", function (d) {\n  //       dragging[d] = Math.min(width, Math.max(0, d3.event.x));\n  //       foreground.attr(\"d\", path);\n  //       dimensions.sort(function (a, b) {\n  //         return position(a) - position(b);\n  //       });\n  //       x.domain(dimensions);\n  //       g.attr(\"transform\", function (d) {\n  //         return \"translate(\" + position(d) + \")\";\n  //       });\n  //     })\n  //     .on(\"end\", function (d) {\n  //       delete dragging[d];\n  //       transition(d3.select(this)).attr(\n  //         \"transform\",\n  //         \"translate(\" + x(d) + \")\"\n  //       );\n  //       transition(foreground).attr(\"d\", path);\n  //       background\n  //         .attr(\"d\", path)\n  //         .transition()\n  //         .delay(500)\n  //         .duration(0)\n  //         .attr(\"visibility\", null);\n  //     })\n  // );\n\n  // Add an axis and title.\n  g.append(\"g\")\n    .attr(\"class\", \"axis\")\n    .each(function (d) {\n      d3.select(this).call(axis.scale(y[d]));\n    });\n  g.append(\"text\")\n    .style(\"text-anchor\", \"middle\")\n    .attr(\"x\", 15)\n    .attr(\"y\", -15)\n    .attr(\"transform\", \"rotate(-25)\")\n    .text(function (d) {\n      return d;\n    });\n\n  // Add and store a brush for each axis.\n\n  // const yBrushes = {};\n  // g.append(\"g\")\n  //   .attr(\"class\", \"brush\")\n  //   .each(function (d) {\n  //     d3.select(this).call(\n  //       (y[d].brush = d3\n  //         .brushY()\n  //         .extent([\n  //           [-10, 0],\n  //           [10, height]\n  //         ])\n  //         .on(\"start\", brushstart)\n  //         .on(\"brush\", brush))\n  //     );\n  //   });\n\n  // function brush() {\n  //   var actives = [];\n  //   //filter brushed extents\n  //   svg\n  //     .selectAll(\".brush\")\n  //     .filter(function (d) {\n  //       return d3.brushSelection(this);\n  //     })\n  //     .each(function (d) {\n  //       actives.push({\n  //         dimension: d,\n  //         extent: d3.brushSelection(this)\n  //       });\n  //     });\n  //   //set un-brushed foreground line disappear\n  //   foreground.classed(\"fade\", function (d, i) {\n  //     return !actives.every(function (active) {\n  //       var dim = active.dimension;\n  //       return (\n  //         active.extent[0] <= y[dim](d[dim]) &&\n  //         y[dim](d[dim]) <= active.extent[1]\n  //       );\n  //     });\n  //   });\n  // }\n\n  function position(d) {\n    var v = dragging[d];\n    return v == null ? x(d) : v;\n  }\n\n  function transition(g) {\n    return g.transition().duration(500);\n  }\n\n  // Returns the path for a given data point.\n  function path(d) {\n    return line(\n      dimensions.map(function (p) {\n        return [position(p), y[p](d[p])];\n      })\n    );\n  }\n\n  function brushstart() {\n    if (d3.event.sourceEvent) {\n      d3.event.sourceEvent.stopPropagation();\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}