{"ast":null,"code":"import * as d3 from \"d3\";\nfunction purifyString(str) {\n  // Regular expression to match content inside brackets with optional spaces\n  var regex = /\\s*\\[[^\\]]*\\]\\s*/g;\n\n  // Replace content inside brackets and the brackets themselves with an empty string\n  return str.replace(regex, \"\");\n}\nexport function createWorldMap({\n  selected_year,\n  selectedCountry,\n  handleCountryChange\n}) {\n  var svg = d3.select(\"#world_map\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n  var Tooltip = d3.select(\"#world_map\").append(\"div\").style(\"opacity\", 0).attr(\"class\", \"tooltip\").style(\"background-color\", \"white\").style(\"border\", \"solid\").style(\"border-width\", \"2px\").style(\"border-radius\", \"5px\").style(\"padding\", \"5px\");\n  var happinessScoreMap; // Declare happinessScoreMap here\n\n  // Map and projection\n  var path = d3.geoPath();\n  var projection = d3.geoMercator().scale(70).center([0, 20]).translate([width / 2, height / 2]);\n\n  // Data and color scale\n  var colorScale = d3.scaleThreshold().domain([1, 5, 7]).range([\"red\", \"orange\", \"yellow\", \"green\"]);\n  var countryCodes; // Define countryCodes here\n\n  // Load external data and boot\n  d3.queue().defer(d3.json, process.env.PUBLIC_URL + \"/data/world_countries.json\").defer(d3.csv, process.env.PUBLIC_URL + \"/data/country-codes.csv\").defer(d3.csv, process.env.PUBLIC_URL + \"/data/sustainable-score-\" + selected_year + \".csv\").await(createMap);\n  function createMap(error, topo, codes, score) {\n    if (error) throw error;\n\n    // Create a map of country scores\n    happinessScoreMap = new Map(score.map(d => [d.country, +d.happiness_score]));\n    var sustainableScoreMap = new Map(score.map(d => [d.country, +d.sustainable_index_score]));\n    countryCodes = new Map(codes.map(x => [x.alpha3, x.country]));\n\n    // Draw the map\n    svg.selectAll(\"path\").data(topo.features).enter().append(\"path\").attr(\"d\", path.projection(projection))\n    // tooltips\n    .style(\"stroke\", \"white\").style(\"stroke-width\", 0.3).attr(\"fill\", function (t) {\n      var countryCode = t.id;\n      var countryName = countryCodes.get(countryCode) || \"\";\n      var happinessScore = happinessScoreMap.get(purifyString(countryName)) || 0;\n      return colorScale(happinessScore);\n    }).style(\"stroke-width\", 2).style(\"stroke\", \"white\").style(\"opacity\", 0.8).on(\"mouseover\", mouseover).on(\"mousemove\", mousemove).on(\"mouseleave\", mouseleave).on(\"click\", mouseclick);\n\n    // Add legend\n    var legend = svg.selectAll(\".legend\").data(colorScale.domain()).enter().append(\"g\").attr(\"class\", \"legend\").attr(\"transform\", function (d, i) {\n      return \"translate(0,\" + (height - 20 - i * 20) + \")\";\n    });\n    legend.append(\"rect\").attr(\"x\", width - 18).attr(\"width\", 18).attr(\"height\", 6).style(\"fill\", function (d) {\n      return colorScale(d);\n    });\n    legend.append(\"text\").attr(\"x\", width - 24).attr(\"y\", 9).attr(\"dy\", \".25em\").style(\"text-anchor\", \"end\").text(function (d) {\n      return d + \" - \" + (d + 1);\n    });\n\n    // Add country labels\n    svg.selectAll(\".country-label\").data(topo.features).enter().append(\"text\").attr(\"class\", \"country-label\").attr(\"x\", function (d) {\n      return path.centroid(d)[0];\n    }).attr(\"y\", function (d) {\n      return path.centroid(d)[1];\n    }).attr(\"text-anchor\", \"middle\").attr(\"alignment-baseline\", \"middle\").style(\"font-size\", \"6px\").style(\"fill\", \"black\").text(function (d) {\n      var countryCode = d.id;\n      return countryCodes.get(countryCode) || \"\";\n    });\n  }\n\n  // Tooltip functions\n  var mouseover = function (d) {\n    Tooltip.style(\"opacity\", 1);\n    d3.select(this).style(\"stroke\", \"black\").style(\"opacity\", 1);\n    var countryCode = d.id;\n    var countryName = countryCodes.get(countryCode) || \"\";\n    var happinessScore = happinessScoreMap.get(countryName) || \"No Data\";\n    Tooltip.html(\"<strong>\" + countryName + \"</strong><br/>Happiness Score: \" + happinessScore).style(\"left\", d3.event.pageX + 10 + \"px\").style(\"top\", d3.event.pageY + 10 + \"px\");\n  };\n  var mousemove = function () {\n    Tooltip.style(\"left\", d3.event.pageX + 10 + \"px\").style(\"top\", d3.event.pageY + 10 + \"px\");\n  };\n  var mouseleave = function () {\n    Tooltip.style(\"opacity\", 0);\n    d3.select(this).style(\"stroke\", \"none\").style(\"opacity\", 0.8);\n  };\n  var mouseclick = function (d) {\n    var countryCode = d.id;\n    var countryName = countryCodes.get(countryCode) || \"\";\n    handleCountryChange(countryName);\n  };\n\n  // Remove tooltip on mouseout\n  svg.on(\"mouseout\", function () {\n    Tooltip.style(\"opacity\", 0);\n  });\n}","map":{"version":3,"names":["d3","purifyString","str","regex","replace","createWorldMap","selected_year","selectedCountry","handleCountryChange","svg","select","width","attr","height","Tooltip","append","style","happinessScoreMap","path","geoPath","projection","geoMercator","scale","center","translate","colorScale","scaleThreshold","domain","range","countryCodes","queue","defer","json","process","env","PUBLIC_URL","csv","await","createMap","error","topo","codes","score","Map","map","d","country","happiness_score","sustainableScoreMap","sustainable_index_score","x","alpha3","selectAll","data","features","enter","t","countryCode","id","countryName","get","happinessScore","on","mouseover","mousemove","mouseleave","mouseclick","legend","i","text","centroid","html","event","pageX","pageY"],"sources":["/Users/nithinkatla00/My-projects/Viz-project/frontend/src/utils/worldMap.js"],"sourcesContent":["import * as d3 from \"d3\";\n\nfunction purifyString(str) {\n  // Regular expression to match content inside brackets with optional spaces\n  var regex = /\\s*\\[[^\\]]*\\]\\s*/g;\n\n  // Replace content inside brackets and the brackets themselves with an empty string\n  return str.replace(regex, \"\");\n}\n\nexport function createWorldMap({\n  selected_year,\n  selectedCountry,\n  handleCountryChange\n}) {\n  var svg = d3.select(\"#world_map\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\n  var Tooltip = d3\n    .select(\"#world_map\")\n    .append(\"div\")\n    .style(\"opacity\", 0)\n    .attr(\"class\", \"tooltip\")\n    .style(\"background-color\", \"white\")\n    .style(\"border\", \"solid\")\n    .style(\"border-width\", \"2px\")\n    .style(\"border-radius\", \"5px\")\n    .style(\"padding\", \"5px\");\n\n  var happinessScoreMap; // Declare happinessScoreMap here\n\n  // Map and projection\n  var path = d3.geoPath();\n  var projection = d3\n    .geoMercator()\n    .scale(70)\n    .center([0, 20])\n    .translate([width / 2, height / 2]);\n\n  // Data and color scale\n  var colorScale = d3\n    .scaleThreshold()\n    .domain([1, 5, 7])\n    .range([\"red\", \"orange\", \"yellow\", \"green\"]);\n\n  var countryCodes; // Define countryCodes here\n\n  // Load external data and boot\n  d3.queue()\n    .defer(d3.json, process.env.PUBLIC_URL + \"/data/world_countries.json\")\n    .defer(d3.csv, process.env.PUBLIC_URL + \"/data/country-codes.csv\")\n    .defer(\n      d3.csv,\n      process.env.PUBLIC_URL +\n        \"/data/sustainable-score-\" +\n        selected_year +\n        \".csv\"\n    )\n    .await(createMap);\n\n  function createMap(error, topo, codes, score) {\n    if (error) throw error;\n\n    // Create a map of country scores\n    happinessScoreMap = new Map(\n      score.map((d) => [d.country, +d.happiness_score])\n    );\n\n    var sustainableScoreMap = new Map(\n      score.map((d) => [d.country, +d.sustainable_index_score])\n    );\n\n    countryCodes = new Map(codes.map((x) => [x.alpha3, x.country]));\n\n    // Draw the map\n    svg\n      .selectAll(\"path\")\n      .data(topo.features)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", path.projection(projection))\n      // tooltips\n      .style(\"stroke\", \"white\")\n      .style(\"stroke-width\", 0.3)\n      .attr(\"fill\", function (t) {\n        var countryCode = t.id;\n        var countryName = countryCodes.get(countryCode) || \"\";\n        var happinessScore =\n          happinessScoreMap.get(purifyString(countryName)) || 0;\n        return colorScale(happinessScore);\n      })\n      .style(\"stroke-width\", 2)\n      .style(\"stroke\", \"white\")\n      .style(\"opacity\", 0.8)\n      .on(\"mouseover\", mouseover)\n      .on(\"mousemove\", mousemove)\n      .on(\"mouseleave\", mouseleave)\n      .on(\"click\", mouseclick);\n\n    // Add legend\n    var legend = svg\n      .selectAll(\".legend\")\n      .data(colorScale.domain())\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function (d, i) {\n        return \"translate(0,\" + (height - 20 - i * 20) + \")\";\n      });\n\n    legend\n      .append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 6)\n      .style(\"fill\", function (d) {\n        return colorScale(d);\n      });\n\n    legend\n      .append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".25em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function (d) {\n        return d + \" - \" + (d + 1);\n      });\n\n    // Add country labels\n    svg\n      .selectAll(\".country-label\")\n      .data(topo.features)\n      .enter()\n      .append(\"text\")\n      .attr(\"class\", \"country-label\")\n      .attr(\"x\", function (d) {\n        return path.centroid(d)[0];\n      })\n      .attr(\"y\", function (d) {\n        return path.centroid(d)[1];\n      })\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"alignment-baseline\", \"middle\")\n      .style(\"font-size\", \"6px\")\n      .style(\"fill\", \"black\")\n      .text(function (d) {\n        var countryCode = d.id;\n        return countryCodes.get(countryCode) || \"\";\n      });\n  }\n\n  // Tooltip functions\n  var mouseover = function (d) {\n    Tooltip.style(\"opacity\", 1);\n    d3.select(this).style(\"stroke\", \"black\").style(\"opacity\", 1);\n    var countryCode = d.id;\n    var countryName = countryCodes.get(countryCode) || \"\";\n    var happinessScore = happinessScoreMap.get(countryName) || \"No Data\";\n    Tooltip.html(\n      \"<strong>\" +\n        countryName +\n        \"</strong><br/>Happiness Score: \" +\n        happinessScore\n    )\n      .style(\"left\", d3.event.pageX + 10 + \"px\")\n      .style(\"top\", d3.event.pageY + 10 + \"px\");\n  };\n\n  var mousemove = function () {\n    Tooltip.style(\"left\", d3.event.pageX + 10 + \"px\").style(\n      \"top\",\n      d3.event.pageY + 10 + \"px\"\n    );\n  };\n\n  var mouseleave = function () {\n    Tooltip.style(\"opacity\", 0);\n    d3.select(this).style(\"stroke\", \"none\").style(\"opacity\", 0.8);\n  };\n\n  var mouseclick = function (d) {\n    var countryCode = d.id;\n    var countryName = countryCodes.get(countryCode) || \"\";\n    handleCountryChange(countryName);\n  };\n\n  // Remove tooltip on mouseout\n  svg.on(\"mouseout\", function () {\n    Tooltip.style(\"opacity\", 0);\n  });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}