{"ast":null,"code":"var _jsxFileName = \"/Users/nithinkatla00/My-projects/Viz-project/frontend/src/components/bar-chart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { drawBarChart } from \"../utils/svg-barchart\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst items = [\"clean_water_sanitation_score\", \"freedom_to_make_life_choices\", \"gdp_per_capita\", \"gender_equality_score\", \"generosity\", \"good_health_score\", \"happiness_score\", \"healthy_life_expectancy\", \"no_poverty_score\", \"perceptions_of_corruption\", \"quality_education_score\", \"social_support\", \"sustainable_index_score\", \"zero_hunger_score\"];\nfunction BarChart({\n  selectedCountry,\n  selectedYear\n}) {\n  _s();\n  const [barData, setBarData] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(\"happiness_score\");\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/country_details\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        country: [],\n        year: [selectedYear] // Use selectedYear here\n      })\n    }).then(response => response.json()).then(data => {\n      const output = JSON.parse(JSON.stringify(data));\n      setBarData(output.data);\n    });\n  }, [selectedYear]); // Only run the effect when selectedYear changes\n\n  useEffect(() => {\n    if (selectedItem !== \"\" && barData.length > 0) {\n      drawBarChart({\n        data: barData,\n        selectedItem\n      });\n    }\n    if (selectedItem === \"\") {\n      const svg = d3.select(\"#bar_chart\");\n      svg.selectAll(\"*\").remove();\n    }\n  }, [barData, selectedItem]); // Run the effect when barData or selectedItem changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: \"60px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      style: {\n        minWidth: 200\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"dropdown-label\",\n        children: \"Select an item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"dropdown-label\",\n        id: \"dropdown\",\n        value: selectedItem,\n        onChange: event => {\n          setSelectedItem(event.target.value);\n        },\n        label: \"Select an item\",\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), items.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: item,\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"bar_chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(BarChart, \"cEgzC+iAHMC5qgPngLoTzSeWomE=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useEffect","useState","drawBarChart","FormControl","InputLabel","Select","MenuItem","d3","jsxDEV","_jsxDEV","items","BarChart","selectedCountry","selectedYear","_s","barData","setBarData","selectedItem","setSelectedItem","fetch","method","headers","body","JSON","stringify","country","year","then","response","json","data","output","parse","length","svg","select","selectAll","remove","style","marginLeft","children","variant","minWidth","id","fileName","_jsxFileName","lineNumber","columnNumber","labelId","value","onChange","event","target","label","map","item","index","_c","$RefreshReg$"],"sources":["/Users/nithinkatla00/My-projects/Viz-project/frontend/src/components/bar-chart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { drawBarChart } from \"../utils/svg-barchart\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\nimport * as d3 from \"d3\";\n\nconst items = [\n  \"clean_water_sanitation_score\",\n  \"freedom_to_make_life_choices\",\n  \"gdp_per_capita\",\n  \"gender_equality_score\",\n  \"generosity\",\n  \"good_health_score\",\n  \"happiness_score\",\n  \"healthy_life_expectancy\",\n  \"no_poverty_score\",\n  \"perceptions_of_corruption\",\n  \"quality_education_score\",\n  \"social_support\",\n  \"sustainable_index_score\",\n  \"zero_hunger_score\"\n];\n\nfunction BarChart({ selectedCountry, selectedYear }) {\n  const [barData, setBarData] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(\"happiness_score\");\n\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/country_details\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        country: [],\n        year: [selectedYear] // Use selectedYear here\n      })\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        const output = JSON.parse(JSON.stringify(data));\n        setBarData(output.data);\n      });\n  }, [selectedYear]); // Only run the effect when selectedYear changes\n\n  useEffect(() => {\n    if (selectedItem !== \"\" && barData.length > 0) {\n      drawBarChart({ data: barData, selectedItem });\n    }\n    if (selectedItem === \"\") {\n      const svg = d3.select(\"#bar_chart\");\n      svg.selectAll(\"*\").remove();\n    }\n  }, [barData, selectedItem]); // Run the effect when barData or selectedItem changes\n\n  return (\n    <div style={{ marginLeft: \"60px\" }}>\n      <FormControl variant=\"outlined\" style={{ minWidth: 200 }}>\n        <InputLabel id=\"dropdown-label\">Select an item</InputLabel>\n        <Select\n          labelId=\"dropdown-label\"\n          id=\"dropdown\"\n          value={selectedItem}\n          onChange={(event) => {\n            setSelectedItem(event.target.value);\n          }}\n          label=\"Select an item\"\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {items.map((item, index) => (\n            <MenuItem key={index} value={item}>\n              {item}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <svg id=\"bar_chart\"></svg>\n    </div>\n  );\n}\n\nexport default BarChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}